PREHOOK: query: explain
select avg(ss_quantity)
       ,avg(ss_ext_sales_price)
       ,avg(ss_ext_wholesale_cost)
       ,sum(ss_ext_wholesale_cost)
 from store_sales
     ,store
     ,customer_demographics
     ,household_demographics
     ,customer_address
     ,date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'M'
  and cd_education_status = '4 yr Degree'
  and ss_sales_price between 100.00 and 150.00
  and hd_dep_count = 3   
     )or
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'D'
  and cd_education_status = 'Primary'
  and ss_sales_price between 50.00 and 100.00   
  and hd_dep_count = 1
     ) or 
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'U'
  and cd_education_status = 'Advanced Degree'
  and ss_sales_price between 150.00 and 200.00 
  and hd_dep_count = 1  
     ))
 and((ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 100 and 200  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 300  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 250  
     ))
PREHOOK: type: QUERY
POSTHOOK: query: explain
select avg(ss_quantity)
       ,avg(ss_ext_sales_price)
       ,avg(ss_ext_wholesale_cost)
       ,sum(ss_ext_wholesale_cost)
 from store_sales
     ,store
     ,customer_demographics
     ,household_demographics
     ,customer_address
     ,date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'M'
  and cd_education_status = '4 yr Degree'
  and ss_sales_price between 100.00 and 150.00
  and hd_dep_count = 3   
     )or
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'D'
  and cd_education_status = 'Primary'
  and ss_sales_price between 50.00 and 100.00   
  and hd_dep_count = 1
     ) or 
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'U'
  and cd_education_status = 'Advanced Degree'
  and ss_sales_price between 150.00 and 200.00 
  and hd_dep_count = 1  
     ))
 and((ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 100 and 200  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 300  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 250  
     ))
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 11 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Map 12 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_92]
        Select Operator [SEL_91] (rows=1 width=256)
          Output:["_col0","_col1","_col2","_col3"]
          Group By Operator [GBY_90] (rows=1 width=256)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)","sum(VALUE._col2)","count(VALUE._col3)","sum(VALUE._col4)","count(VALUE._col5)"]
          <-Reducer 6 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_37]
              Group By Operator [GBY_36] (rows=1 width=256)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col5)","count(_col5)","sum(_col7)","count(_col7)","sum(_col8)","count(_col8)"]
                Merge Join Operator [MERGEJOIN_71] (rows=8066665 width=1014)
                  Conds:RS_32._col4=RS_89._col0(Inner),Output:["_col5","_col7","_col8"]
                <-Map 12 [SIMPLE_EDGE] vectorized
                  SHUFFLE [RS_89]
                    PartitionCols:_col0
                    Select Operator [SEL_88] (rows=1704 width=1910)
                      Output:["_col0"]
                      Filter Operator [FIL_87] (rows=1704 width=1910)
                        predicate:s_store_sk is not null
                        TableScan [TS_15] (rows=1704 width=1910)
                          default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk"]
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_32]
                    PartitionCols:_col4
                    Filter Operator [FIL_31] (rows=7333332 width=1014)
                      predicate:((((_col18 = 'KY') or (_col18 = 'GA') or (_col18 = 'NM')) and _col9 BETWEEN 100 AND 200) or (((_col18 = 'MT') or (_col18 = 'OR') or (_col18 = 'IN')) and _col9 BETWEEN 150 AND 300) or (((_col18 = 'WI') or (_col18 = 'MO') or (_col18 = 'WV')) and _col9 BETWEEN 50 AND 250))
                      Merge Join Operator [MERGEJOIN_70] (rows=22000000 width=1014)
                        Conds:RS_28._col3=RS_86._col0(Inner),Output:["_col4","_col5","_col7","_col8","_col9","_col18"]
                      <-Map 11 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_86]
                          PartitionCols:_col0
                          Select Operator [SEL_85] (rows=20000000 width=1014)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_84] (rows=20000000 width=1014)
                              predicate:((ca_country = 'United States') and ca_address_sk is not null)
                              TableScan [TS_12] (rows=40000000 width=1014)
                                default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state","ca_country"]
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_28]
                          PartitionCols:_col3
                          Filter Operator [FIL_27] (rows=10647918 width=88)
                            predicate:(((_col13 = 'D') and (_col14 = 'Primary') and _col6 BETWEEN 50 AND 100 and (_col16 = 1)) or ((_col13 = 'M') and (_col14 = '4 yr Degree') and _col6 BETWEEN 100 AND 150 and (_col16 = 3)) or ((_col13 = 'U') and (_col14 = 'Advanced Degree') and _col6 BETWEEN 150 AND 200 and (_col16 = 1)))
                            Merge Join Operator [MERGEJOIN_69] (rows=255550079 width=88)
                              Conds:RS_24._col2=RS_83._col0(Inner),Output:["_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col13","_col14","_col16"]
                            <-Map 10 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_83]
                                PartitionCols:_col0
                                Select Operator [SEL_82] (rows=3600 width=107)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_81] (rows=3600 width=107)
                                    predicate:((hd_dep_count) IN (3, 1) and hd_demo_sk is not null)
                                    TableScan [TS_9] (rows=7200 width=107)
                                      default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count"]
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_24]
                                PartitionCols:_col2
                                Merge Join Operator [MERGEJOIN_68] (rows=232318249 width=88)
                                  Conds:RS_21._col1=RS_80._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col13","_col14"]
                                <-Map 9 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_80]
                                    PartitionCols:_col0
                                    Select Operator [SEL_79] (rows=465450 width=385)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_78] (rows=465450 width=385)
                                        predicate:((cd_education_status) IN ('4 yr Degree', 'Primary', 'Advanced Degree') and (cd_marital_status) IN ('M', 'D', 'U') and cd_demo_sk is not null)
                                        TableScan [TS_6] (rows=1861800 width=385)
                                          default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_21]
                                    PartitionCols:_col1
                                    Merge Join Operator [MERGEJOIN_67] (rows=211198404 width=88)
                                      Conds:RS_74._col0=RS_77._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_74]
                                        PartitionCols:_col0
                                        Select Operator [SEL_73] (rows=191998545 width=88)
                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                          Filter Operator [FIL_72] (rows=191998545 width=88)
                                            predicate:((ss_sales_price BETWEEN 100 AND 150 or ss_sales_price BETWEEN 50 AND 100 or ss_sales_price BETWEEN 150 AND 200) and ss_addr_sk is not null and ss_cdemo_sk is not null and ss_hdemo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                            TableScan [TS_0] (rows=575995635 width=88)
                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_cdemo_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_quantity","ss_sales_price","ss_ext_sales_price","ss_ext_wholesale_cost","ss_net_profit"]
                                    <-Map 8 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_77]
                                        PartitionCols:_col0
                                        Select Operator [SEL_76] (rows=36524 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_75] (rows=36524 width=1119)
                                            predicate:((d_year = 2001) and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]

