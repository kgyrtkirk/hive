PREHOOK: query: explain
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE), Reducer 19 (ONE_TO_ONE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Map 24 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE), Reducer 19 (ONE_TO_ONE_EDGE)
Reducer 16 <- Reducer 15 (SIMPLE_EDGE)
Reducer 18 <- Map 17 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 21 <- Map 20 (SIMPLE_EDGE), Reducer 22 (ONE_TO_ONE_EDGE)
Reducer 22 <- Map 20 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 19 (ONE_TO_ONE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 12 (ONE_TO_ONE_EDGE), Reducer 16 (ONE_TO_ONE_EDGE), Reducer 5 (ONE_TO_ONE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 9 <- Map 23 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_435]
        Limit [LIM_434] (rows=100 width=77)
          Number of rows:100
          Select Operator [SEL_433] (rows=38326911 width=77)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_155]
              Select Operator [SEL_154] (rows=38326911 width=77)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Merge Join Operator [MERGEJOIN_390] (rows=38326911 width=77)
                  Conds:RS_418._col0=RS_425._col0(Inner),RS_418._col0=RS_432._col0(Inner),Output:["_col0","_col1","_col3","_col5"]
                <-Reducer 12 [ONE_TO_ONE_EDGE] vectorized
                  FORWARD [RS_425]
                    PartitionCols:_col0
                    Group By Operator [GBY_424] (rows=17421323 width=77)
                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                    <-Reducer 11 [SIMPLE_EDGE]
                      SHUFFLE [RS_97]
                        PartitionCols:_col0
                        Group By Operator [GBY_96] (rows=34842647 width=77)
                          Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col1
                          Select Operator [SEL_94] (rows=34842647 width=77)
                            Output:["_col1","_col5"]
                            Merge Join Operator [MERGEJOIN_388] (rows=34842647 width=77)
                              Conds:RS_423._col0=RS_415._col0(Inner),Output:["_col1","_col2","_col4"]
                            <-Reducer 19 [ONE_TO_ONE_EDGE] vectorized
                              FORWARD [RS_415]
                                PartitionCols:_col0
                                Group By Operator [GBY_413] (rows=44194 width=1119)
                                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                                <-Reducer 18 [SIMPLE_EDGE]
                                  SHUFFLE [RS_38]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_37] (rows=88388 width=1119)
                                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                                      Merge Join Operator [MERGEJOIN_380] (rows=88388 width=1119)
                                        Conds:RS_403._col1=RS_34._col0(Left Semi),Output:["_col0"]
                                      <-Map 17 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_403]
                                          PartitionCols:_col1
                                          Select Operator [SEL_402] (rows=73049 width=1119)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_401] (rows=73049 width=1119)
                                              predicate:(d_date is not null and d_date_sk is not null)
                                              TableScan [TS_14] (rows=73049 width=1119)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                      <-Reducer 21 [SIMPLE_EDGE]
                                        SHUFFLE [RS_34]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_32] (rows=80353 width=1119)
                                            Output:["_col0"],keys:_col0
                                            Merge Join Operator [MERGEJOIN_379] (rows=80353 width=1119)
                                              Conds:RS_408._col1=RS_412._col0(Inner),Output:["_col0"]
                                            <-Map 20 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_408]
                                                PartitionCols:_col1
                                                Select Operator [SEL_406] (rows=73049 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_404] (rows=73049 width=1119)
                                                    predicate:(d_date is not null and d_week_seq is not null)
                                                    TableScan [TS_17] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date","d_week_seq"]
                                            <-Reducer 22 [ONE_TO_ONE_EDGE] vectorized
                                              FORWARD [RS_412]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_411] (rows=36524 width=1119)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Map 20 [SIMPLE_EDGE] vectorized
                                                  SHUFFLE [RS_410]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_409] (rows=73049 width=1119)
                                                      Output:["_col0"],keys:d_week_seq
                                                      Select Operator [SEL_407] (rows=73049 width=1119)
                                                        Output:["d_week_seq"]
                                                        Filter Operator [FIL_405] (rows=73049 width=1119)
                                                          predicate:((d_date) IN ('1998-01-02', '1998-10-15', '1998-11-10') and d_week_seq is not null)
                                                           Please refer to the previous TableScan [TS_17]
                            <-Reducer 10 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_423]
                                PartitionCols:_col0
                                Group By Operator [GBY_422] (rows=31675133 width=77)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Reducer 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_61]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_60] (rows=63350266 width=77)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)"],keys:_col0, _col4
                                      Merge Join Operator [MERGEJOIN_381] (rows=63350266 width=77)
                                        Conds:RS_421._col1=RS_397._col0(Inner),Output:["_col0","_col2","_col4"]
                                      <-Map 8 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_397]
                                          PartitionCols:_col0
                                          Select Operator [SEL_395] (rows=462000 width=1436)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_394] (rows=462000 width=1436)
                                              predicate:(i_item_id is not null and i_item_sk is not null)
                                              TableScan [TS_3] (rows=462000 width=1436)
                                                default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                                      <-Map 23 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_421]
                                          PartitionCols:_col1
                                          Select Operator [SEL_420] (rows=57591150 width=77)
                                            Output:["_col0","_col1","_col2"]
                                            Filter Operator [FIL_419] (rows=57591150 width=77)
                                              predicate:(sr_item_sk is not null and sr_returned_date_sk is not null)
                                              TableScan [TS_50] (rows=57591150 width=77)
                                                default@store_returns,store_returns,Tbl:COMPLETE,Col:NONE,Output:["sr_returned_date_sk","sr_item_sk","sr_return_quantity"]
                <-Reducer 16 [ONE_TO_ONE_EDGE] vectorized
                  FORWARD [RS_432]
                    PartitionCols:_col0
                    Group By Operator [GBY_431] (rows=4355536 width=92)
                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                    <-Reducer 15 [SIMPLE_EDGE]
                      SHUFFLE [RS_147]
                        PartitionCols:_col0
                        Group By Operator [GBY_146] (rows=8711072 width=92)
                          Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col1
                          Select Operator [SEL_144] (rows=8711072 width=92)
                            Output:["_col1","_col5"]
                            Merge Join Operator [MERGEJOIN_389] (rows=8711072 width=92)
                              Conds:RS_430._col0=RS_416._col0(Inner),Output:["_col1","_col2","_col4"]
                            <-Reducer 19 [ONE_TO_ONE_EDGE] vectorized
                              FORWARD [RS_416]
                                PartitionCols:_col0
                                 Please refer to the previous Group By Operator [GBY_413]
                            <-Reducer 14 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_430]
                                PartitionCols:_col0
                                Group By Operator [GBY_429] (rows=7919157 width=92)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Reducer 13 [SIMPLE_EDGE]
                                  SHUFFLE [RS_111]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_110] (rows=15838314 width=92)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)"],keys:_col0, _col4
                                      Merge Join Operator [MERGEJOIN_384] (rows=15838314 width=92)
                                        Conds:RS_428._col1=RS_398._col0(Inner),Output:["_col0","_col2","_col4"]
                                      <-Map 8 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_398]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_395]
                                      <-Map 24 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_428]
                                          PartitionCols:_col1
                                          Select Operator [SEL_427] (rows=14398467 width=92)
                                            Output:["_col0","_col1","_col2"]
                                            Filter Operator [FIL_426] (rows=14398467 width=92)
                                              predicate:(wr_item_sk is not null and wr_returned_date_sk is not null)
                                              TableScan [TS_100] (rows=14398467 width=92)
                                                default@web_returns,web_returns,Tbl:COMPLETE,Col:NONE,Output:["wr_returned_date_sk","wr_item_sk","wr_return_quantity"]
                <-Reducer 5 [ONE_TO_ONE_EDGE] vectorized
                  FORWARD [RS_418]
                    PartitionCols:_col0
                    Group By Operator [GBY_417] (rows=8711661 width=106)
                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                    <-Reducer 4 [SIMPLE_EDGE]
                      SHUFFLE [RS_47]
                        PartitionCols:_col0
                        Group By Operator [GBY_46] (rows=17423322 width=106)
                          Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col1
                          Select Operator [SEL_44] (rows=17423322 width=106)
                            Output:["_col1","_col5"]
                            Merge Join Operator [MERGEJOIN_387] (rows=17423322 width=106)
                              Conds:RS_400._col0=RS_414._col0(Inner),Output:["_col1","_col2","_col4"]
                            <-Reducer 19 [ONE_TO_ONE_EDGE] vectorized
                              FORWARD [RS_414]
                                PartitionCols:_col0
                                 Please refer to the previous Group By Operator [GBY_413]
                            <-Reducer 3 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_400]
                                PartitionCols:_col0
                                Group By Operator [GBY_399] (rows=15839384 width=106)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_11]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_10] (rows=31678769 width=106)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)"],keys:_col0, _col4
                                      Merge Join Operator [MERGEJOIN_378] (rows=31678769 width=106)
                                        Conds:RS_393._col1=RS_396._col0(Inner),Output:["_col0","_col2","_col4"]
                                      <-Map 8 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_396]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_395]
                                      <-Map 1 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_393]
                                          PartitionCols:_col1
                                          Select Operator [SEL_392] (rows=28798881 width=106)
                                            Output:["_col0","_col1","_col2"]
                                            Filter Operator [FIL_391] (rows=28798881 width=106)
                                              predicate:(cr_item_sk is not null and cr_returned_date_sk is not null)
                                              TableScan [TS_0] (rows=28798881 width=106)
                                                default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_returned_date_sk","cr_item_sk","cr_return_quantity"]

