Warning: Map Join MAPJOIN[89][bigTable=?] in task 'Stage-5:MAPRED' is a cross product
PREHOOK: query: explain
select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-2 depends on stages: Stage-3
  Stage-6 depends on stages: Stage-2
  Stage-5 depends on stages: Stage-6
  Stage-1 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-4
    Spark
      Edges:
        Reducer 3 <- Map 2 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: ((d_year = 2000) and (d_moy = 2) and d_month_seq is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 876588 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((d_moy = 2) and (d_year = 2000) and d_month_seq is not null) (type: boolean)
                    Statistics: Num rows: 50 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_month_seq (type: int)
                      outputColumnNames: d_month_seq
                      Statistics: Num rows: 50 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: d_month_seq (type: int)
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized
        Reducer 3 
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Spark HashTable Sink Operator
                  keys:
                    0 _col1 (type: int)
                    1 _col0 (type: int)

  Stage: Stage-3
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: d
                  filterExpr: (d_date_sk is not null and d_month_seq is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (d_date_sk is not null and d_month_seq is not null) (type: boolean)
                    Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int), d_month_seq (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col0
                        input vertices:
                          1 Reducer 3
                        Statistics: Num rows: 52 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                        Spark HashTable Sink Operator
                          keys:
                            0 _col0 (type: int)
                            1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: s
                  filterExpr: (ss_customer_sk is not null and ss_sold_date_sk is not null and ss_item_sk is not null) (type: boolean)
                  Statistics: Num rows: 575995635 Data size: 6704610012 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (ss_customer_sk is not null and ss_item_sk is not null and ss_sold_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 525327388 Data size: 6114829788 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_customer_sk (type: int)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 525327388 Data size: 6114829788 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col4, _col5
                        input vertices:
                          0 Map 1
                        Statistics: Num rows: 575379 Data size: 2301520 Basic stats: COMPLETE Column stats: COMPLETE
                        Spark HashTable Sink Operator
                          keys:
                            0 _col5 (type: int)
                            1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-6
    Spark
      Edges:
        Reducer 14 <- Map 13 (GROUP, 2)
        Reducer 15 <- Reducer 14 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 13 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: ((d_year = 2000) and (d_moy = 2)) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 876588 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((d_moy = 2) and (d_year = 2000)) (type: boolean)
                    Statistics: Num rows: 50 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_month_seq (type: int)
                      outputColumnNames: d_month_seq
                      Statistics: Num rows: 50 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: d_month_seq (type: int)
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized
        Reducer 14 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: count()
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: bigint)
        Reducer 15 
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (sq_count_check(_col0) <= 1) (type: boolean)
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Spark HashTable Sink Operator
                      keys:
                        0 
                        1 

  Stage: Stage-5
    Spark
      Edges:
        Reducer 12 <- Map 11 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 11 
            Map Operator Tree:
                TableScan
                  alias: j
                  filterExpr: i_category is not null (type: boolean)
                  Statistics: Num rows: 462000 Data size: 93193408 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: i_category is not null (type: boolean)
                    Statistics: Num rows: 462000 Data size: 93193408 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: sum(i_current_price), count(i_current_price)
                      keys: i_category (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 10 Data size: 2100 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 10 Data size: 2100 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
            Execution mode: vectorized
        Reducer 12 
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 10 Data size: 2100 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: (_col1 / _col2) (type: decimal(37,22)), _col0 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 10 Data size: 2020 Basic stats: COMPLETE Column stats: COMPLETE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 
                      1 
                    outputColumnNames: _col0, _col1
                    input vertices:
                      1 Reducer 15
                    Statistics: Num rows: 10 Data size: 2020 Basic stats: COMPLETE Column stats: COMPLETE
                    Spark HashTable Sink Operator
                      keys:
                        0 _col1 (type: string)
                        1 _col2 (type: string)

  Stage: Stage-1
    Spark
      Edges:
        Reducer 6 <- Map 10 (PARTITION-LEVEL SORT, 34), Map 5 (PARTITION-LEVEL SORT, 34)
        Reducer 7 <- Map 16 (PARTITION-LEVEL SORT, 2), Reducer 6 (PARTITION-LEVEL SORT, 2)
        Reducer 8 <- Reducer 7 (GROUP, 2)
        Reducer 9 <- Reducer 8 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 10 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: ca_address_sk is not null (type: boolean)
                  Statistics: Num rows: 40000000 Data size: 3600000000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ca_address_sk is not null (type: boolean)
                    Statistics: Num rows: 40000000 Data size: 3600000000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ca_address_sk (type: int), ca_state (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 40000000 Data size: 3600000000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 40000000 Data size: 3600000000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 16 
            Map Operator Tree:
                TableScan
                  alias: i
                  filterExpr: (i_item_sk is not null and i_category is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 95041408 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (i_category is not null and i_item_sk is not null) (type: boolean)
                    Statistics: Num rows: 462000 Data size: 95041408 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_sk (type: int), i_current_price (type: decimal(7,2)), i_category (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 462000 Data size: 95041408 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: string)
                          1 _col2 (type: string)
                        outputColumnNames: _col0, _col3, _col4
                        input vertices:
                          0 Reducer 12
                        Statistics: Num rows: 462000 Data size: 105205408 Basic stats: COMPLETE Column stats: COMPLETE
                        Filter Operator
                          predicate: (_col4 > (1.2 * CAST( _col0 AS decimal(16,6)))) (type: boolean)
                          Statistics: Num rows: 154000 Data size: 35068544 Basic stats: COMPLETE Column stats: COMPLETE
                          Select Operator
                            expressions: _col3 (type: int)
                            outputColumnNames: _col0
                            Statistics: Num rows: 154000 Data size: 35068544 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              key expressions: _col0 (type: int)
                              sort order: +
                              Map-reduce partition columns: _col0 (type: int)
                              Statistics: Num rows: 154000 Data size: 35068544 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: c
                  filterExpr: (c_current_addr_sk is not null and c_customer_sk is not null) (type: boolean)
                  Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (c_current_addr_sk is not null and c_customer_sk is not null) (type: boolean)
                    Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: c_customer_sk (type: int), c_current_addr_sk (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized
        Reducer 6 
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col3
                Statistics: Num rows: 80000000 Data size: 7200000000 Basic stats: COMPLETE Column stats: COMPLETE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col5 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col4, _col9
                  input vertices:
                    0 Map 4
                  Statistics: Num rows: 575379 Data size: 51784110 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col4 (type: int)
                    sort order: +
                    Map-reduce partition columns: _col4 (type: int)
                    Statistics: Num rows: 575379 Data size: 51784110 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col9 (type: string)
        Reducer 7 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col4 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col9
                Statistics: Num rows: 26 Data size: 2236 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  keys: _col9 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: bigint)
        Reducer 8 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col1 >= 10L) (type: boolean)
                  Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col1 (type: bigint)
                    sort order: +
                    Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                    TopN Hash Memory Usage: 0.1
                    value expressions: _col0 (type: string)
        Reducer 9 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: bigint)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 94 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

