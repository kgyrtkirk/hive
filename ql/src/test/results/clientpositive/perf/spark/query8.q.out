PREHOOK: query: explain
select  s_store_name
      ,sum(ss_net_profit)
 from store_sales
     ,date_dim
     ,store,
     (select ca_zip
     from (
     (SELECT substr(ca_zip,1,5) ca_zip
      FROM customer_address
      WHERE substr(ca_zip,1,5) IN (
                          '89436','30868','65085','22977','83927','77557',
                          '58429','40697','80614','10502','32779',
                          '91137','61265','98294','17921','18427',
                          '21203','59362','87291','84093','21505',
                          '17184','10866','67898','25797','28055',
                          '18377','80332','74535','21757','29742',
                          '90885','29898','17819','40811','25990',
                          '47513','89531','91068','10391','18846',
                          '99223','82637','41368','83658','86199',
                          '81625','26696','89338','88425','32200',
                          '81427','19053','77471','36610','99823',
                          '43276','41249','48584','83550','82276',
                          '18842','78890','14090','38123','40936',
                          '34425','19850','43286','80072','79188',
                          '54191','11395','50497','84861','90733',
                          '21068','57666','37119','25004','57835',
                          '70067','62878','95806','19303','18840',
                          '19124','29785','16737','16022','49613',
                          '89977','68310','60069','98360','48649',
                          '39050','41793','25002','27413','39736',
                          '47208','16515','94808','57648','15009',
                          '80015','42961','63982','21744','71853',
                          '81087','67468','34175','64008','20261',
                          '11201','51799','48043','45645','61163',
                          '48375','36447','57042','21218','41100',
                          '89951','22745','35851','83326','61125',
                          '78298','80752','49858','52940','96976',
                          '63792','11376','53582','18717','90226',
                          '50530','94203','99447','27670','96577',
                          '57856','56372','16165','23427','54561',
                          '28806','44439','22926','30123','61451',
                          '92397','56979','92309','70873','13355',
                          '21801','46346','37562','56458','28286',
                          '47306','99555','69399','26234','47546',
                          '49661','88601','35943','39936','25632',
                          '24611','44166','56648','30379','59785',
                          '11110','14329','93815','52226','71381',
                          '13842','25612','63294','14664','21077',
                          '82626','18799','60915','81020','56447',
                          '76619','11433','13414','42548','92713',
                          '70467','30884','47484','16072','38936',
                          '13036','88376','45539','35901','19506',
                          '65690','73957','71850','49231','14276',
                          '20005','18384','76615','11635','38177',
                          '55607','41369','95447','58581','58149',
                          '91946','33790','76232','75692','95464',
                          '22246','51061','56692','53121','77209',
                          '15482','10688','14868','45907','73520',
                          '72666','25734','17959','24677','66446',
                          '94627','53535','15560','41967','69297',
                          '11929','59403','33283','52232','57350',
                          '43933','40921','36635','10827','71286',
                          '19736','80619','25251','95042','15526',
                          '36496','55854','49124','81980','35375',
                          '49157','63512','28944','14946','36503',
                          '54010','18767','23969','43905','66979',
                          '33113','21286','58471','59080','13395',
                          '79144','70373','67031','38360','26705',
                          '50906','52406','26066','73146','15884',
                          '31897','30045','61068','45550','92454',
                          '13376','14354','19770','22928','97790',
                          '50723','46081','30202','14410','20223',
                          '88500','67298','13261','14172','81410',
                          '93578','83583','46047','94167','82564',
                          '21156','15799','86709','37931','74703',
                          '83103','23054','70470','72008','49247',
                          '91911','69998','20961','70070','63197',
                          '54853','88191','91830','49521','19454',
                          '81450','89091','62378','25683','61869',
                          '51744','36580','85778','36871','48121',
                          '28810','83712','45486','67393','26935',
                          '42393','20132','55349','86057','21309',
                          '80218','10094','11357','48819','39734',
                          '40758','30432','21204','29467','30214',
                          '61024','55307','74621','11622','68908',
                          '33032','52868','99194','99900','84936',
                          '69036','99149','45013','32895','59004',
                          '32322','14933','32936','33562','72550',
                          '27385','58049','58200','16808','21360',
                          '32961','18586','79307','15492'))
     intersect
     (select ca_zip
      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt
            FROM customer_address, customer
            WHERE ca_address_sk = c_current_addr_sk and
                  c_preferred_cust_flag='Y'
            group by ca_zip
            having count(*) > 10)A1))A2) V1
 where ss_store_sk = s_store_sk
  and ss_sold_date_sk = d_date_sk
  and d_qoy = 1 and d_year = 2002
  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))
 group by s_store_name
 order by s_store_name
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  s_store_name
      ,sum(ss_net_profit)
 from store_sales
     ,date_dim
     ,store,
     (select ca_zip
     from (
     (SELECT substr(ca_zip,1,5) ca_zip
      FROM customer_address
      WHERE substr(ca_zip,1,5) IN (
                          '89436','30868','65085','22977','83927','77557',
                          '58429','40697','80614','10502','32779',
                          '91137','61265','98294','17921','18427',
                          '21203','59362','87291','84093','21505',
                          '17184','10866','67898','25797','28055',
                          '18377','80332','74535','21757','29742',
                          '90885','29898','17819','40811','25990',
                          '47513','89531','91068','10391','18846',
                          '99223','82637','41368','83658','86199',
                          '81625','26696','89338','88425','32200',
                          '81427','19053','77471','36610','99823',
                          '43276','41249','48584','83550','82276',
                          '18842','78890','14090','38123','40936',
                          '34425','19850','43286','80072','79188',
                          '54191','11395','50497','84861','90733',
                          '21068','57666','37119','25004','57835',
                          '70067','62878','95806','19303','18840',
                          '19124','29785','16737','16022','49613',
                          '89977','68310','60069','98360','48649',
                          '39050','41793','25002','27413','39736',
                          '47208','16515','94808','57648','15009',
                          '80015','42961','63982','21744','71853',
                          '81087','67468','34175','64008','20261',
                          '11201','51799','48043','45645','61163',
                          '48375','36447','57042','21218','41100',
                          '89951','22745','35851','83326','61125',
                          '78298','80752','49858','52940','96976',
                          '63792','11376','53582','18717','90226',
                          '50530','94203','99447','27670','96577',
                          '57856','56372','16165','23427','54561',
                          '28806','44439','22926','30123','61451',
                          '92397','56979','92309','70873','13355',
                          '21801','46346','37562','56458','28286',
                          '47306','99555','69399','26234','47546',
                          '49661','88601','35943','39936','25632',
                          '24611','44166','56648','30379','59785',
                          '11110','14329','93815','52226','71381',
                          '13842','25612','63294','14664','21077',
                          '82626','18799','60915','81020','56447',
                          '76619','11433','13414','42548','92713',
                          '70467','30884','47484','16072','38936',
                          '13036','88376','45539','35901','19506',
                          '65690','73957','71850','49231','14276',
                          '20005','18384','76615','11635','38177',
                          '55607','41369','95447','58581','58149',
                          '91946','33790','76232','75692','95464',
                          '22246','51061','56692','53121','77209',
                          '15482','10688','14868','45907','73520',
                          '72666','25734','17959','24677','66446',
                          '94627','53535','15560','41967','69297',
                          '11929','59403','33283','52232','57350',
                          '43933','40921','36635','10827','71286',
                          '19736','80619','25251','95042','15526',
                          '36496','55854','49124','81980','35375',
                          '49157','63512','28944','14946','36503',
                          '54010','18767','23969','43905','66979',
                          '33113','21286','58471','59080','13395',
                          '79144','70373','67031','38360','26705',
                          '50906','52406','26066','73146','15884',
                          '31897','30045','61068','45550','92454',
                          '13376','14354','19770','22928','97790',
                          '50723','46081','30202','14410','20223',
                          '88500','67298','13261','14172','81410',
                          '93578','83583','46047','94167','82564',
                          '21156','15799','86709','37931','74703',
                          '83103','23054','70470','72008','49247',
                          '91911','69998','20961','70070','63197',
                          '54853','88191','91830','49521','19454',
                          '81450','89091','62378','25683','61869',
                          '51744','36580','85778','36871','48121',
                          '28810','83712','45486','67393','26935',
                          '42393','20132','55349','86057','21309',
                          '80218','10094','11357','48819','39734',
                          '40758','30432','21204','29467','30214',
                          '61024','55307','74621','11622','68908',
                          '33032','52868','99194','99900','84936',
                          '69036','99149','45013','32895','59004',
                          '32322','14933','32936','33562','72550',
                          '27385','58049','58200','16808','21360',
                          '32961','18586','79307','15492'))
     intersect
     (select ca_zip
      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt
            FROM customer_address, customer
            WHERE ca_address_sk = c_current_addr_sk and
                  c_preferred_cust_flag='Y'
            group by ca_zip
            having count(*) > 10)A1))A2) V1
 where ss_store_sk = s_store_sk
  and ss_sold_date_sk = d_date_sk
  and d_qoy = 1 and d_year = 2002
  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))
 group by s_store_name
 order by s_store_name
 limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-2 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-3
    Spark
      Edges:
        Reducer 10 <- Map 13 (PARTITION-LEVEL SORT, 586), Map 9 (PARTITION-LEVEL SORT, 586)
        Reducer 11 <- Reducer 10 (GROUP, 349)
        Reducer 12 <- Reducer 11 (GROUP, 59)
        Reducer 7 <- Map 6 (GROUP, 318)
        Reducer 8 <- Reducer 12 (GROUP, 188), Reducer 7 (GROUP, 188)
#### A masked pattern was here ####
      Vertices:
        Map 13 
            Map Operator Tree:
                TableScan
                  alias: customer
                  filterExpr: ((c_preferred_cust_flag = 'Y') and c_current_addr_sk is not null) (type: boolean)
                  Statistics: Num rows: 80000000 Data size: 68801615852 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((c_preferred_cust_flag = 'Y') and c_current_addr_sk is not null) (type: boolean)
                    Statistics: Num rows: 40000000 Data size: 34400807926 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c_current_addr_sk (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 40000000 Data size: 34400807926 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 40000000 Data size: 34400807926 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: customer_address
                  filterExpr: (((substr(ca_zip, 1, 5) = '89436') or (substr(ca_zip, 1, 5) = '30868') or (substr(ca_zip, 1, 5) = '65085') or (substr(ca_zip, 1, 5) = '22977') or (substr(ca_zip, 1, 5) = '83927') or (substr(ca_zip, 1, 5) = '77557') or (substr(ca_zip, 1, 5) = '58429') or (substr(ca_zip, 1, 5) = '40697') or (substr(ca_zip, 1, 5) = '80614') or (substr(ca_zip, 1, 5) = '10502') or (substr(ca_zip, 1, 5) = '32779') or (substr(ca_zip, 1, 5) = '91137') or (substr(ca_zip, 1, 5) = '61265') or (substr(ca_zip, 1, 5) = '98294') or (substr(ca_zip, 1, 5) = '17921') or (substr(ca_zip, 1, 5) = '18427') or (substr(ca_zip, 1, 5) = '21203') or (substr(ca_zip, 1, 5) = '59362') or (substr(ca_zip, 1, 5) = '87291') or (substr(ca_zip, 1, 5) = '84093') or (substr(ca_zip, 1, 5) = '21505') or (substr(ca_zip, 1, 5) = '17184') or (substr(ca_zip, 1, 5) = '10866') or (substr(ca_zip, 1, 5) = '67898') or (substr(ca_zip, 1, 5) = '25797') or (substr(ca_zip, 1, 5) = '28055') or (substr(ca_zip, 1, 5) = '18377') or (substr(ca_zip, 1, 5) = '80332') or (substr(ca_zip, 1, 5) = '74535') or (substr(ca_zip, 1, 5) = '21757') or (substr(ca_zip, 1, 5) = '29742') or (substr(ca_zip, 1, 5) = '90885') or (substr(ca_zip, 1, 5) = '29898') or (substr(ca_zip, 1, 5) = '17819') or (substr(ca_zip, 1, 5) = '40811') or (substr(ca_zip, 1, 5) = '25990') or (substr(ca_zip, 1, 5) = '47513') or (substr(ca_zip, 1, 5) = '89531') or (substr(ca_zip, 1, 5) = '91068') or (substr(ca_zip, 1, 5) = '10391') or (substr(ca_zip, 1, 5) = '18846') or (substr(ca_zip, 1, 5) = '99223') or (substr(ca_zip, 1, 5) = '82637') or (substr(ca_zip, 1, 5) = '41368') or (substr(ca_zip, 1, 5) = '83658') or (substr(ca_zip, 1, 5) = '86199') or (substr(ca_zip, 1, 5) = '81625') or (substr(ca_zip, 1, 5) = '26696') or (substr(ca_zip, 1, 5) = '89338') or (substr(ca_zip, 1, 5) = '88425') or (substr(ca_zip, 1, 5) = '32200') or (substr(ca_zip, 1, 5) = '81427') or (substr(ca_zip, 1, 5) = '19053') or (substr(ca_zip, 1, 5) = '77471') or (substr(ca_zip, 1, 5) = '36610') or (substr(ca_zip, 1, 5) = '99823') or (substr(ca_zip, 1, 5) = '43276') or (substr(ca_zip, 1, 5) = '41249') or (substr(ca_zip, 1, 5) = '48584') or (substr(ca_zip, 1, 5) = '83550') or (substr(ca_zip, 1, 5) = '82276') or (substr(ca_zip, 1, 5) = '18842') or (substr(ca_zip, 1, 5) = '78890') or (substr(ca_zip, 1, 5) = '14090') or (substr(ca_zip, 1, 5) = '38123') or (substr(ca_zip, 1, 5) = '40936') or (substr(ca_zip, 1, 5) = '34425') or (substr(ca_zip, 1, 5) = '19850') or (substr(ca_zip, 1, 5) = '43286') or (substr(ca_zip, 1, 5) = '80072') or (substr(ca_zip, 1, 5) = '79188') or (substr(ca_zip, 1, 5) = '54191') or (substr(ca_zip, 1, 5) = '11395') or (substr(ca_zip, 1, 5) = '50497') or (substr(ca_zip, 1, 5) = '84861') or (substr(ca_zip, 1, 5) = '90733') or (substr(ca_zip, 1, 5) = '21068') or (substr(ca_zip, 1, 5) = '57666') or (substr(ca_zip, 1, 5) = '37119') or (substr(ca_zip, 1, 5) = '25004') or (substr(ca_zip, 1, 5) = '57835') or (substr(ca_zip, 1, 5) = '70067') or (substr(ca_zip, 1, 5) = '62878') or (substr(ca_zip, 1, 5) = '95806') or (substr(ca_zip, 1, 5) = '19303') or (substr(ca_zip, 1, 5) = '18840') or (substr(ca_zip, 1, 5) = '19124') or (substr(ca_zip, 1, 5) = '29785') or (substr(ca_zip, 1, 5) = '16737') or (substr(ca_zip, 1, 5) = '16022') or (substr(ca_zip, 1, 5) = '49613') or (substr(ca_zip, 1, 5) = '89977') or (substr(ca_zip, 1, 5) = '68310') or (substr(ca_zip, 1, 5) = '60069') or (substr(ca_zip, 1, 5) = '98360') or (substr(ca_zip, 1, 5) = '48649') or (substr(ca_zip, 1, 5) = '39050') or (substr(ca_zip, 1, 5) = '41793') or (substr(ca_zip, 1, 5) = '25002') or (substr(ca_zip, 1, 5) = '27413') or (substr(ca_zip, 1, 5) = '39736') or (substr(ca_zip, 1, 5) = '47208') or (substr(ca_zip, 1, 5) = '16515') or (substr(ca_zip, 1, 5) = '94808') or (substr(ca_zip, 1, 5) = '57648') or (substr(ca_zip, 1, 5) = '15009') or (substr(ca_zip, 1, 5) = '80015') or (substr(ca_zip, 1, 5) = '42961') or (substr(ca_zip, 1, 5) = '63982') or (substr(ca_zip, 1, 5) = '21744') or (substr(ca_zip, 1, 5) = '71853') or (substr(ca_zip, 1, 5) = '81087') or (substr(ca_zip, 1, 5) = '67468') or (substr(ca_zip, 1, 5) = '34175') or (substr(ca_zip, 1, 5) = '64008') or (substr(ca_zip, 1, 5) = '20261') or (substr(ca_zip, 1, 5) = '11201') or (substr(ca_zip, 1, 5) = '51799') or (substr(ca_zip, 1, 5) = '48043') or (substr(ca_zip, 1, 5) = '45645') or (substr(ca_zip, 1, 5) = '61163') or (substr(ca_zip, 1, 5) = '48375') or (substr(ca_zip, 1, 5) = '36447') or (substr(ca_zip, 1, 5) = '57042') or (substr(ca_zip, 1, 5) = '21218') or (substr(ca_zip, 1, 5) = '41100') or (substr(ca_zip, 1, 5) = '89951') or (substr(ca_zip, 1, 5) = '22745') or (substr(ca_zip, 1, 5) = '35851') or (substr(ca_zip, 1, 5) = '83326') or (substr(ca_zip, 1, 5) = '61125') or (substr(ca_zip, 1, 5) = '78298') or (substr(ca_zip, 1, 5) = '80752') or (substr(ca_zip, 1, 5) = '49858') or (substr(ca_zip, 1, 5) = '52940') or (substr(ca_zip, 1, 5) = '96976') or (substr(ca_zip, 1, 5) = '63792') or (substr(ca_zip, 1, 5) = '11376') or (substr(ca_zip, 1, 5) = '53582') or (substr(ca_zip, 1, 5) = '18717') or (substr(ca_zip, 1, 5) = '90226') or (substr(ca_zip, 1, 5) = '50530') or (substr(ca_zip, 1, 5) = '94203') or (substr(ca_zip, 1, 5) = '99447') or (substr(ca_zip, 1, 5) = '27670') or (substr(ca_zip, 1, 5) = '96577') or (substr(ca_zip, 1, 5) = '57856') or (substr(ca_zip, 1, 5) = '56372') or (substr(ca_zip, 1, 5) = '16165') or (substr(ca_zip, 1, 5) = '23427') or (substr(ca_zip, 1, 5) = '54561') or (substr(ca_zip, 1, 5) = '28806') or (substr(ca_zip, 1, 5) = '44439') or (substr(ca_zip, 1, 5) = '22926') or (substr(ca_zip, 1, 5) = '30123') or (substr(ca_zip, 1, 5) = '61451') or (substr(ca_zip, 1, 5) = '92397') or (substr(ca_zip, 1, 5) = '56979') or (substr(ca_zip, 1, 5) = '92309') or (substr(ca_zip, 1, 5) = '70873') or (substr(ca_zip, 1, 5) = '13355') or (substr(ca_zip, 1, 5) = '21801') or (substr(ca_zip, 1, 5) = '46346') or (substr(ca_zip, 1, 5) = '37562') or (substr(ca_zip, 1, 5) = '56458') or (substr(ca_zip, 1, 5) = '28286') or (substr(ca_zip, 1, 5) = '47306') or (substr(ca_zip, 1, 5) = '99555') or (substr(ca_zip, 1, 5) = '69399') or (substr(ca_zip, 1, 5) = '26234') or (substr(ca_zip, 1, 5) = '47546') or (substr(ca_zip, 1, 5) = '49661') or (substr(ca_zip, 1, 5) = '88601') or (substr(ca_zip, 1, 5) = '35943') or (substr(ca_zip, 1, 5) = '39936') or (substr(ca_zip, 1, 5) = '25632') or (substr(ca_zip, 1, 5) = '24611') or (substr(ca_zip, 1, 5) = '44166') or (substr(ca_zip, 1, 5) = '56648') or (substr(ca_zip, 1, 5) = '30379') or (substr(ca_zip, 1, 5) = '59785') or (substr(ca_zip, 1, 5) = '11110') or (substr(ca_zip, 1, 5) = '14329') or (substr(ca_zip, 1, 5) = '93815') or (substr(ca_zip, 1, 5) = '52226') or (substr(ca_zip, 1, 5) = '71381') or (substr(ca_zip, 1, 5) = '13842') or (substr(ca_zip, 1, 5) = '25612') or (substr(ca_zip, 1, 5) = '63294') or (substr(ca_zip, 1, 5) = '14664') or (substr(ca_zip, 1, 5) = '21077') or (substr(ca_zip, 1, 5) = '82626') or (substr(ca_zip, 1, 5) = '18799') or (substr(ca_zip, 1, 5) = '60915') or (substr(ca_zip, 1, 5) = '81020') or (substr(ca_zip, 1, 5) = '56447') or (substr(ca_zip, 1, 5) = '76619') or (substr(ca_zip, 1, 5) = '11433') or (substr(ca_zip, 1, 5) = '13414') or (substr(ca_zip, 1, 5) = '42548') or (substr(ca_zip, 1, 5) = '92713') or (substr(ca_zip, 1, 5) = '70467') or (substr(ca_zip, 1, 5) = '30884') or (substr(ca_zip, 1, 5) = '47484') or (substr(ca_zip, 1, 5) = '16072') or (substr(ca_zip, 1, 5) = '38936') or (substr(ca_zip, 1, 5) = '13036') or (substr(ca_zip, 1, 5) = '88376') or (substr(ca_zip, 1, 5) = '45539') or (substr(ca_zip, 1, 5) = '35901') or (substr(ca_zip, 1, 5) = '19506') or (substr(ca_zip, 1, 5) = '65690') or (substr(ca_zip, 1, 5) = '73957') or (substr(ca_zip, 1, 5) = '71850') or (substr(ca_zip, 1, 5) = '49231') or (substr(ca_zip, 1, 5) = '14276') or (substr(ca_zip, 1, 5) = '20005') or (substr(ca_zip, 1, 5) = '18384') or (substr(ca_zip, 1, 5) = '76615') or (substr(ca_zip, 1, 5) = '11635') or (substr(ca_zip, 1, 5) = '38177') or (substr(ca_zip, 1, 5) = '55607') or (substr(ca_zip, 1, 5) = '41369') or (substr(ca_zip, 1, 5) = '95447') or (substr(ca_zip, 1, 5) = '58581') or (substr(ca_zip, 1, 5) = '58149') or (substr(ca_zip, 1, 5) = '91946') or (substr(ca_zip, 1, 5) = '33790') or (substr(ca_zip, 1, 5) = '76232') or (substr(ca_zip, 1, 5) = '75692') or (substr(ca_zip, 1, 5) = '95464') or (substr(ca_zip, 1, 5) = '22246') or (substr(ca_zip, 1, 5) = '51061') or (substr(ca_zip, 1, 5) = '56692') or (substr(ca_zip, 1, 5) = '53121') or (substr(ca_zip, 1, 5) = '77209') or (substr(ca_zip, 1, 5) = '15482') or (substr(ca_zip, 1, 5) = '10688') or (substr(ca_zip, 1, 5) = '14868') or (substr(ca_zip, 1, 5) = '45907') or (substr(ca_zip, 1, 5) = '73520') or (substr(ca_zip, 1, 5) = '72666') or (substr(ca_zip, 1, 5) = '25734') or (substr(ca_zip, 1, 5) = '17959') or (substr(ca_zip, 1, 5) = '24677') or (substr(ca_zip, 1, 5) = '66446') or (substr(ca_zip, 1, 5) = '94627') or (substr(ca_zip, 1, 5) = '53535') or (substr(ca_zip, 1, 5) = '15560') or (substr(ca_zip, 1, 5) = '41967') or (substr(ca_zip, 1, 5) = '69297') or (substr(ca_zip, 1, 5) = '11929') or (substr(ca_zip, 1, 5) = '59403') or (substr(ca_zip, 1, 5) = '33283') or (substr(ca_zip, 1, 5) = '52232') or (substr(ca_zip, 1, 5) = '57350') or (substr(ca_zip, 1, 5) = '43933') or (substr(ca_zip, 1, 5) = '40921') or (substr(ca_zip, 1, 5) = '36635') or (substr(ca_zip, 1, 5) = '10827') or (substr(ca_zip, 1, 5) = '71286') or (substr(ca_zip, 1, 5) = '19736') or (substr(ca_zip, 1, 5) = '80619') or (substr(ca_zip, 1, 5) = '25251') or (substr(ca_zip, 1, 5) = '95042') or (substr(ca_zip, 1, 5) = '15526') or (substr(ca_zip, 1, 5) = '36496') or (substr(ca_zip, 1, 5) = '55854') or (substr(ca_zip, 1, 5) = '49124') or (substr(ca_zip, 1, 5) = '81980') or (substr(ca_zip, 1, 5) = '35375') or (substr(ca_zip, 1, 5) = '49157') or (substr(ca_zip, 1, 5) = '63512') or (substr(ca_zip, 1, 5) = '28944') or (substr(ca_zip, 1, 5) = '14946') or (substr(ca_zip, 1, 5) = '36503') or (substr(ca_zip, 1, 5) = '54010') or (substr(ca_zip, 1, 5) = '18767') or (substr(ca_zip, 1, 5) = '23969') or (substr(ca_zip, 1, 5) = '43905') or (substr(ca_zip, 1, 5) = '66979') or (substr(ca_zip, 1, 5) = '33113') or (substr(ca_zip, 1, 5) = '21286') or (substr(ca_zip, 1, 5) = '58471') or (substr(ca_zip, 1, 5) = '59080') or (substr(ca_zip, 1, 5) = '13395') or (substr(ca_zip, 1, 5) = '79144') or (substr(ca_zip, 1, 5) = '70373') or (substr(ca_zip, 1, 5) = '67031') or (substr(ca_zip, 1, 5) = '38360') or (substr(ca_zip, 1, 5) = '26705') or (substr(ca_zip, 1, 5) = '50906') or (substr(ca_zip, 1, 5) = '52406') or (substr(ca_zip, 1, 5) = '26066') or (substr(ca_zip, 1, 5) = '73146') or (substr(ca_zip, 1, 5) = '15884') or (substr(ca_zip, 1, 5) = '31897') or (substr(ca_zip, 1, 5) = '30045') or (substr(ca_zip, 1, 5) = '61068') or (substr(ca_zip, 1, 5) = '45550') or (substr(ca_zip, 1, 5) = '92454') or (substr(ca_zip, 1, 5) = '13376') or (substr(ca_zip, 1, 5) = '14354') or (substr(ca_zip, 1, 5) = '19770') or (substr(ca_zip, 1, 5) = '22928') or (substr(ca_zip, 1, 5) = '97790') or (substr(ca_zip, 1, 5) = '50723') or (substr(ca_zip, 1, 5) = '46081') or (substr(ca_zip, 1, 5) = '30202') or (substr(ca_zip, 1, 5) = '14410') or (substr(ca_zip, 1, 5) = '20223') or (substr(ca_zip, 1, 5) = '88500') or (substr(ca_zip, 1, 5) = '67298') or (substr(ca_zip, 1, 5) = '13261') or (substr(ca_zip, 1, 5) = '14172') or (substr(ca_zip, 1, 5) = '81410') or (substr(ca_zip, 1, 5) = '93578') or (substr(ca_zip, 1, 5) = '83583') or (substr(ca_zip, 1, 5) = '46047') or (substr(ca_zip, 1, 5) = '94167') or (substr(ca_zip, 1, 5) = '82564') or (substr(ca_zip, 1, 5) = '21156') or (substr(ca_zip, 1, 5) = '15799') or (substr(ca_zip, 1, 5) = '86709') or (substr(ca_zip, 1, 5) = '37931') or (substr(ca_zip, 1, 5) = '74703') or (substr(ca_zip, 1, 5) = '83103') or (substr(ca_zip, 1, 5) = '23054') or (substr(ca_zip, 1, 5) = '70470') or (substr(ca_zip, 1, 5) = '72008') or (substr(ca_zip, 1, 5) = '49247') or (substr(ca_zip, 1, 5) = '91911') or (substr(ca_zip, 1, 5) = '69998') or (substr(ca_zip, 1, 5) = '20961') or (substr(ca_zip, 1, 5) = '70070') or (substr(ca_zip, 1, 5) = '63197') or (substr(ca_zip, 1, 5) = '54853') or (substr(ca_zip, 1, 5) = '88191') or (substr(ca_zip, 1, 5) = '91830') or (substr(ca_zip, 1, 5) = '49521') or (substr(ca_zip, 1, 5) = '19454') or (substr(ca_zip, 1, 5) = '81450') or (substr(ca_zip, 1, 5) = '89091') or (substr(ca_zip, 1, 5) = '62378') or (substr(ca_zip, 1, 5) = '25683') or (substr(ca_zip, 1, 5) = '61869') or (substr(ca_zip, 1, 5) = '51744') or (substr(ca_zip, 1, 5) = '36580') or (substr(ca_zip, 1, 5) = '85778') or (substr(ca_zip, 1, 5) = '36871') or (substr(ca_zip, 1, 5) = '48121') or (substr(ca_zip, 1, 5) = '28810') or (substr(ca_zip, 1, 5) = '83712') or (substr(ca_zip, 1, 5) = '45486') or (substr(ca_zip, 1, 5) = '67393') or (substr(ca_zip, 1, 5) = '26935') or (substr(ca_zip, 1, 5) = '42393') or (substr(ca_zip, 1, 5) = '20132') or (substr(ca_zip, 1, 5) = '55349') or (substr(ca_zip, 1, 5) = '86057') or (substr(ca_zip, 1, 5) = '21309') or (substr(ca_zip, 1, 5) = '80218') or (substr(ca_zip, 1, 5) = '10094') or (substr(ca_zip, 1, 5) = '11357') or (substr(ca_zip, 1, 5) = '48819') or (substr(ca_zip, 1, 5) = '39734') or (substr(ca_zip, 1, 5) = '40758') or (substr(ca_zip, 1, 5) = '30432') or (substr(ca_zip, 1, 5) = '21204') or (substr(ca_zip, 1, 5) = '29467') or (substr(ca_zip, 1, 5) = '30214') or (substr(ca_zip, 1, 5) = '61024') or (substr(ca_zip, 1, 5) = '55307') or (substr(ca_zip, 1, 5) = '74621') or (substr(ca_zip, 1, 5) = '11622') or (substr(ca_zip, 1, 5) = '68908') or (substr(ca_zip, 1, 5) = '33032') or (substr(ca_zip, 1, 5) = '52868') or (substr(ca_zip, 1, 5) = '99194') or (substr(ca_zip, 1, 5) = '99900') or (substr(ca_zip, 1, 5) = '84936') or (substr(ca_zip, 1, 5) = '69036') or (substr(ca_zip, 1, 5) = '99149') or (substr(ca_zip, 1, 5) = '45013') or (substr(ca_zip, 1, 5) = '32895') or (substr(ca_zip, 1, 5) = '59004') or (substr(ca_zip, 1, 5) = '32322') or (substr(ca_zip, 1, 5) = '14933') or (substr(ca_zip, 1, 5) = '32936') or (substr(ca_zip, 1, 5) = '33562') or (substr(ca_zip, 1, 5) = '72550') or (substr(ca_zip, 1, 5) = '27385') or (substr(ca_zip, 1, 5) = '58049') or (substr(ca_zip, 1, 5) = '58200') or (substr(ca_zip, 1, 5) = '16808') or (substr(ca_zip, 1, 5) = '21360') or (substr(ca_zip, 1, 5) = '32961') or (substr(ca_zip, 1, 5) = '18586') or (substr(ca_zip, 1, 5) = '79307') or (substr(ca_zip, 1, 5) = '15492')) and substr(substr(ca_zip, 1, 5), 1, 2) is not null) (type: boolean)
                  Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((substr(ca_zip, 1, 5) = '89436') or (substr(ca_zip, 1, 5) = '30868') or (substr(ca_zip, 1, 5) = '65085') or (substr(ca_zip, 1, 5) = '22977') or (substr(ca_zip, 1, 5) = '83927') or (substr(ca_zip, 1, 5) = '77557') or (substr(ca_zip, 1, 5) = '58429') or (substr(ca_zip, 1, 5) = '40697') or (substr(ca_zip, 1, 5) = '80614') or (substr(ca_zip, 1, 5) = '10502') or (substr(ca_zip, 1, 5) = '32779') or (substr(ca_zip, 1, 5) = '91137') or (substr(ca_zip, 1, 5) = '61265') or (substr(ca_zip, 1, 5) = '98294') or (substr(ca_zip, 1, 5) = '17921') or (substr(ca_zip, 1, 5) = '18427') or (substr(ca_zip, 1, 5) = '21203') or (substr(ca_zip, 1, 5) = '59362') or (substr(ca_zip, 1, 5) = '87291') or (substr(ca_zip, 1, 5) = '84093') or (substr(ca_zip, 1, 5) = '21505') or (substr(ca_zip, 1, 5) = '17184') or (substr(ca_zip, 1, 5) = '10866') or (substr(ca_zip, 1, 5) = '67898') or (substr(ca_zip, 1, 5) = '25797') or (substr(ca_zip, 1, 5) = '28055') or (substr(ca_zip, 1, 5) = '18377') or (substr(ca_zip, 1, 5) = '80332') or (substr(ca_zip, 1, 5) = '74535') or (substr(ca_zip, 1, 5) = '21757') or (substr(ca_zip, 1, 5) = '29742') or (substr(ca_zip, 1, 5) = '90885') or (substr(ca_zip, 1, 5) = '29898') or (substr(ca_zip, 1, 5) = '17819') or (substr(ca_zip, 1, 5) = '40811') or (substr(ca_zip, 1, 5) = '25990') or (substr(ca_zip, 1, 5) = '47513') or (substr(ca_zip, 1, 5) = '89531') or (substr(ca_zip, 1, 5) = '91068') or (substr(ca_zip, 1, 5) = '10391') or (substr(ca_zip, 1, 5) = '18846') or (substr(ca_zip, 1, 5) = '99223') or (substr(ca_zip, 1, 5) = '82637') or (substr(ca_zip, 1, 5) = '41368') or (substr(ca_zip, 1, 5) = '83658') or (substr(ca_zip, 1, 5) = '86199') or (substr(ca_zip, 1, 5) = '81625') or (substr(ca_zip, 1, 5) = '26696') or (substr(ca_zip, 1, 5) = '89338') or (substr(ca_zip, 1, 5) = '88425') or (substr(ca_zip, 1, 5) = '32200') or (substr(ca_zip, 1, 5) = '81427') or (substr(ca_zip, 1, 5) = '19053') or (substr(ca_zip, 1, 5) = '77471') or (substr(ca_zip, 1, 5) = '36610') or (substr(ca_zip, 1, 5) = '99823') or (substr(ca_zip, 1, 5) = '43276') or (substr(ca_zip, 1, 5) = '41249') or (substr(ca_zip, 1, 5) = '48584') or (substr(ca_zip, 1, 5) = '83550') or (substr(ca_zip, 1, 5) = '82276') or (substr(ca_zip, 1, 5) = '18842') or (substr(ca_zip, 1, 5) = '78890') or (substr(ca_zip, 1, 5) = '14090') or (substr(ca_zip, 1, 5) = '38123') or (substr(ca_zip, 1, 5) = '40936') or (substr(ca_zip, 1, 5) = '34425') or (substr(ca_zip, 1, 5) = '19850') or (substr(ca_zip, 1, 5) = '43286') or (substr(ca_zip, 1, 5) = '80072') or (substr(ca_zip, 1, 5) = '79188') or (substr(ca_zip, 1, 5) = '54191') or (substr(ca_zip, 1, 5) = '11395') or (substr(ca_zip, 1, 5) = '50497') or (substr(ca_zip, 1, 5) = '84861') or (substr(ca_zip, 1, 5) = '90733') or (substr(ca_zip, 1, 5) = '21068') or (substr(ca_zip, 1, 5) = '57666') or (substr(ca_zip, 1, 5) = '37119') or (substr(ca_zip, 1, 5) = '25004') or (substr(ca_zip, 1, 5) = '57835') or (substr(ca_zip, 1, 5) = '70067') or (substr(ca_zip, 1, 5) = '62878') or (substr(ca_zip, 1, 5) = '95806') or (substr(ca_zip, 1, 5) = '19303') or (substr(ca_zip, 1, 5) = '18840') or (substr(ca_zip, 1, 5) = '19124') or (substr(ca_zip, 1, 5) = '29785') or (substr(ca_zip, 1, 5) = '16737') or (substr(ca_zip, 1, 5) = '16022') or (substr(ca_zip, 1, 5) = '49613') or (substr(ca_zip, 1, 5) = '89977') or (substr(ca_zip, 1, 5) = '68310') or (substr(ca_zip, 1, 5) = '60069') or (substr(ca_zip, 1, 5) = '98360') or (substr(ca_zip, 1, 5) = '48649') or (substr(ca_zip, 1, 5) = '39050') or (substr(ca_zip, 1, 5) = '41793') or (substr(ca_zip, 1, 5) = '25002') or (substr(ca_zip, 1, 5) = '27413') or (substr(ca_zip, 1, 5) = '39736') or (substr(ca_zip, 1, 5) = '47208') or (substr(ca_zip, 1, 5) = '16515') or (substr(ca_zip, 1, 5) = '94808') or (substr(ca_zip, 1, 5) = '57648') or (substr(ca_zip, 1, 5) = '15009') or (substr(ca_zip, 1, 5) = '80015') or (substr(ca_zip, 1, 5) = '42961') or (substr(ca_zip, 1, 5) = '63982') or (substr(ca_zip, 1, 5) = '21744') or (substr(ca_zip, 1, 5) = '71853') or (substr(ca_zip, 1, 5) = '81087') or (substr(ca_zip, 1, 5) = '67468') or (substr(ca_zip, 1, 5) = '34175') or (substr(ca_zip, 1, 5) = '64008') or (substr(ca_zip, 1, 5) = '20261') or (substr(ca_zip, 1, 5) = '11201') or (substr(ca_zip, 1, 5) = '51799') or (substr(ca_zip, 1, 5) = '48043') or (substr(ca_zip, 1, 5) = '45645') or (substr(ca_zip, 1, 5) = '61163') or (substr(ca_zip, 1, 5) = '48375') or (substr(ca_zip, 1, 5) = '36447') or (substr(ca_zip, 1, 5) = '57042') or (substr(ca_zip, 1, 5) = '21218') or (substr(ca_zip, 1, 5) = '41100') or (substr(ca_zip, 1, 5) = '89951') or (substr(ca_zip, 1, 5) = '22745') or (substr(ca_zip, 1, 5) = '35851') or (substr(ca_zip, 1, 5) = '83326') or (substr(ca_zip, 1, 5) = '61125') or (substr(ca_zip, 1, 5) = '78298') or (substr(ca_zip, 1, 5) = '80752') or (substr(ca_zip, 1, 5) = '49858') or (substr(ca_zip, 1, 5) = '52940') or (substr(ca_zip, 1, 5) = '96976') or (substr(ca_zip, 1, 5) = '63792') or (substr(ca_zip, 1, 5) = '11376') or (substr(ca_zip, 1, 5) = '53582') or (substr(ca_zip, 1, 5) = '18717') or (substr(ca_zip, 1, 5) = '90226') or (substr(ca_zip, 1, 5) = '50530') or (substr(ca_zip, 1, 5) = '94203') or (substr(ca_zip, 1, 5) = '99447') or (substr(ca_zip, 1, 5) = '27670') or (substr(ca_zip, 1, 5) = '96577') or (substr(ca_zip, 1, 5) = '57856') or (substr(ca_zip, 1, 5) = '56372') or (substr(ca_zip, 1, 5) = '16165') or (substr(ca_zip, 1, 5) = '23427') or (substr(ca_zip, 1, 5) = '54561') or (substr(ca_zip, 1, 5) = '28806') or (substr(ca_zip, 1, 5) = '44439') or (substr(ca_zip, 1, 5) = '22926') or (substr(ca_zip, 1, 5) = '30123') or (substr(ca_zip, 1, 5) = '61451') or (substr(ca_zip, 1, 5) = '92397') or (substr(ca_zip, 1, 5) = '56979') or (substr(ca_zip, 1, 5) = '92309') or (substr(ca_zip, 1, 5) = '70873') or (substr(ca_zip, 1, 5) = '13355') or (substr(ca_zip, 1, 5) = '21801') or (substr(ca_zip, 1, 5) = '46346') or (substr(ca_zip, 1, 5) = '37562') or (substr(ca_zip, 1, 5) = '56458') or (substr(ca_zip, 1, 5) = '28286') or (substr(ca_zip, 1, 5) = '47306') or (substr(ca_zip, 1, 5) = '99555') or (substr(ca_zip, 1, 5) = '69399') or (substr(ca_zip, 1, 5) = '26234') or (substr(ca_zip, 1, 5) = '47546') or (substr(ca_zip, 1, 5) = '49661') or (substr(ca_zip, 1, 5) = '88601') or (substr(ca_zip, 1, 5) = '35943') or (substr(ca_zip, 1, 5) = '39936') or (substr(ca_zip, 1, 5) = '25632') or (substr(ca_zip, 1, 5) = '24611') or (substr(ca_zip, 1, 5) = '44166') or (substr(ca_zip, 1, 5) = '56648') or (substr(ca_zip, 1, 5) = '30379') or (substr(ca_zip, 1, 5) = '59785') or (substr(ca_zip, 1, 5) = '11110') or (substr(ca_zip, 1, 5) = '14329') or (substr(ca_zip, 1, 5) = '93815') or (substr(ca_zip, 1, 5) = '52226') or (substr(ca_zip, 1, 5) = '71381') or (substr(ca_zip, 1, 5) = '13842') or (substr(ca_zip, 1, 5) = '25612') or (substr(ca_zip, 1, 5) = '63294') or (substr(ca_zip, 1, 5) = '14664') or (substr(ca_zip, 1, 5) = '21077') or (substr(ca_zip, 1, 5) = '82626') or (substr(ca_zip, 1, 5) = '18799') or (substr(ca_zip, 1, 5) = '60915') or (substr(ca_zip, 1, 5) = '81020') or (substr(ca_zip, 1, 5) = '56447') or (substr(ca_zip, 1, 5) = '76619') or (substr(ca_zip, 1, 5) = '11433') or (substr(ca_zip, 1, 5) = '13414') or (substr(ca_zip, 1, 5) = '42548') or (substr(ca_zip, 1, 5) = '92713') or (substr(ca_zip, 1, 5) = '70467') or (substr(ca_zip, 1, 5) = '30884') or (substr(ca_zip, 1, 5) = '47484') or (substr(ca_zip, 1, 5) = '16072') or (substr(ca_zip, 1, 5) = '38936') or (substr(ca_zip, 1, 5) = '13036') or (substr(ca_zip, 1, 5) = '88376') or (substr(ca_zip, 1, 5) = '45539') or (substr(ca_zip, 1, 5) = '35901') or (substr(ca_zip, 1, 5) = '19506') or (substr(ca_zip, 1, 5) = '65690') or (substr(ca_zip, 1, 5) = '73957') or (substr(ca_zip, 1, 5) = '71850') or (substr(ca_zip, 1, 5) = '49231') or (substr(ca_zip, 1, 5) = '14276') or (substr(ca_zip, 1, 5) = '20005') or (substr(ca_zip, 1, 5) = '18384') or (substr(ca_zip, 1, 5) = '76615') or (substr(ca_zip, 1, 5) = '11635') or (substr(ca_zip, 1, 5) = '38177') or (substr(ca_zip, 1, 5) = '55607') or (substr(ca_zip, 1, 5) = '41369') or (substr(ca_zip, 1, 5) = '95447') or (substr(ca_zip, 1, 5) = '58581') or (substr(ca_zip, 1, 5) = '58149') or (substr(ca_zip, 1, 5) = '91946') or (substr(ca_zip, 1, 5) = '33790') or (substr(ca_zip, 1, 5) = '76232') or (substr(ca_zip, 1, 5) = '75692') or (substr(ca_zip, 1, 5) = '95464') or (substr(ca_zip, 1, 5) = '22246') or (substr(ca_zip, 1, 5) = '51061') or (substr(ca_zip, 1, 5) = '56692') or (substr(ca_zip, 1, 5) = '53121') or (substr(ca_zip, 1, 5) = '77209') or (substr(ca_zip, 1, 5) = '15482') or (substr(ca_zip, 1, 5) = '10688') or (substr(ca_zip, 1, 5) = '14868') or (substr(ca_zip, 1, 5) = '45907') or (substr(ca_zip, 1, 5) = '73520') or (substr(ca_zip, 1, 5) = '72666') or (substr(ca_zip, 1, 5) = '25734') or (substr(ca_zip, 1, 5) = '17959') or (substr(ca_zip, 1, 5) = '24677') or (substr(ca_zip, 1, 5) = '66446') or (substr(ca_zip, 1, 5) = '94627') or (substr(ca_zip, 1, 5) = '53535') or (substr(ca_zip, 1, 5) = '15560') or (substr(ca_zip, 1, 5) = '41967') or (substr(ca_zip, 1, 5) = '69297') or (substr(ca_zip, 1, 5) = '11929') or (substr(ca_zip, 1, 5) = '59403') or (substr(ca_zip, 1, 5) = '33283') or (substr(ca_zip, 1, 5) = '52232') or (substr(ca_zip, 1, 5) = '57350') or (substr(ca_zip, 1, 5) = '43933') or (substr(ca_zip, 1, 5) = '40921') or (substr(ca_zip, 1, 5) = '36635') or (substr(ca_zip, 1, 5) = '10827') or (substr(ca_zip, 1, 5) = '71286') or (substr(ca_zip, 1, 5) = '19736') or (substr(ca_zip, 1, 5) = '80619') or (substr(ca_zip, 1, 5) = '25251') or (substr(ca_zip, 1, 5) = '95042') or (substr(ca_zip, 1, 5) = '15526') or (substr(ca_zip, 1, 5) = '36496') or (substr(ca_zip, 1, 5) = '55854') or (substr(ca_zip, 1, 5) = '49124') or (substr(ca_zip, 1, 5) = '81980') or (substr(ca_zip, 1, 5) = '35375') or (substr(ca_zip, 1, 5) = '49157') or (substr(ca_zip, 1, 5) = '63512') or (substr(ca_zip, 1, 5) = '28944') or (substr(ca_zip, 1, 5) = '14946') or (substr(ca_zip, 1, 5) = '36503') or (substr(ca_zip, 1, 5) = '54010') or (substr(ca_zip, 1, 5) = '18767') or (substr(ca_zip, 1, 5) = '23969') or (substr(ca_zip, 1, 5) = '43905') or (substr(ca_zip, 1, 5) = '66979') or (substr(ca_zip, 1, 5) = '33113') or (substr(ca_zip, 1, 5) = '21286') or (substr(ca_zip, 1, 5) = '58471') or (substr(ca_zip, 1, 5) = '59080') or (substr(ca_zip, 1, 5) = '13395') or (substr(ca_zip, 1, 5) = '79144') or (substr(ca_zip, 1, 5) = '70373') or (substr(ca_zip, 1, 5) = '67031') or (substr(ca_zip, 1, 5) = '38360') or (substr(ca_zip, 1, 5) = '26705') or (substr(ca_zip, 1, 5) = '50906') or (substr(ca_zip, 1, 5) = '52406') or (substr(ca_zip, 1, 5) = '26066') or (substr(ca_zip, 1, 5) = '73146') or (substr(ca_zip, 1, 5) = '15884') or (substr(ca_zip, 1, 5) = '31897') or (substr(ca_zip, 1, 5) = '30045') or (substr(ca_zip, 1, 5) = '61068') or (substr(ca_zip, 1, 5) = '45550') or (substr(ca_zip, 1, 5) = '92454') or (substr(ca_zip, 1, 5) = '13376') or (substr(ca_zip, 1, 5) = '14354') or (substr(ca_zip, 1, 5) = '19770') or (substr(ca_zip, 1, 5) = '22928') or (substr(ca_zip, 1, 5) = '97790') or (substr(ca_zip, 1, 5) = '50723') or (substr(ca_zip, 1, 5) = '46081') or (substr(ca_zip, 1, 5) = '30202') or (substr(ca_zip, 1, 5) = '14410') or (substr(ca_zip, 1, 5) = '20223') or (substr(ca_zip, 1, 5) = '88500') or (substr(ca_zip, 1, 5) = '67298') or (substr(ca_zip, 1, 5) = '13261') or (substr(ca_zip, 1, 5) = '14172') or (substr(ca_zip, 1, 5) = '81410') or (substr(ca_zip, 1, 5) = '93578') or (substr(ca_zip, 1, 5) = '83583') or (substr(ca_zip, 1, 5) = '46047') or (substr(ca_zip, 1, 5) = '94167') or (substr(ca_zip, 1, 5) = '82564') or (substr(ca_zip, 1, 5) = '21156') or (substr(ca_zip, 1, 5) = '15799') or (substr(ca_zip, 1, 5) = '86709') or (substr(ca_zip, 1, 5) = '37931') or (substr(ca_zip, 1, 5) = '74703') or (substr(ca_zip, 1, 5) = '83103') or (substr(ca_zip, 1, 5) = '23054') or (substr(ca_zip, 1, 5) = '70470') or (substr(ca_zip, 1, 5) = '72008') or (substr(ca_zip, 1, 5) = '49247') or (substr(ca_zip, 1, 5) = '91911') or (substr(ca_zip, 1, 5) = '69998') or (substr(ca_zip, 1, 5) = '20961') or (substr(ca_zip, 1, 5) = '70070') or (substr(ca_zip, 1, 5) = '63197') or (substr(ca_zip, 1, 5) = '54853') or (substr(ca_zip, 1, 5) = '88191') or (substr(ca_zip, 1, 5) = '91830') or (substr(ca_zip, 1, 5) = '49521') or (substr(ca_zip, 1, 5) = '19454') or (substr(ca_zip, 1, 5) = '81450') or (substr(ca_zip, 1, 5) = '89091') or (substr(ca_zip, 1, 5) = '62378') or (substr(ca_zip, 1, 5) = '25683') or (substr(ca_zip, 1, 5) = '61869') or (substr(ca_zip, 1, 5) = '51744') or (substr(ca_zip, 1, 5) = '36580') or (substr(ca_zip, 1, 5) = '85778') or (substr(ca_zip, 1, 5) = '36871') or (substr(ca_zip, 1, 5) = '48121') or (substr(ca_zip, 1, 5) = '28810') or (substr(ca_zip, 1, 5) = '83712') or (substr(ca_zip, 1, 5) = '45486') or (substr(ca_zip, 1, 5) = '67393') or (substr(ca_zip, 1, 5) = '26935') or (substr(ca_zip, 1, 5) = '42393') or (substr(ca_zip, 1, 5) = '20132') or (substr(ca_zip, 1, 5) = '55349') or (substr(ca_zip, 1, 5) = '86057') or (substr(ca_zip, 1, 5) = '21309') or (substr(ca_zip, 1, 5) = '80218') or (substr(ca_zip, 1, 5) = '10094') or (substr(ca_zip, 1, 5) = '11357') or (substr(ca_zip, 1, 5) = '48819') or (substr(ca_zip, 1, 5) = '39734') or (substr(ca_zip, 1, 5) = '40758') or (substr(ca_zip, 1, 5) = '30432') or (substr(ca_zip, 1, 5) = '21204') or (substr(ca_zip, 1, 5) = '29467') or (substr(ca_zip, 1, 5) = '30214') or (substr(ca_zip, 1, 5) = '61024') or (substr(ca_zip, 1, 5) = '55307') or (substr(ca_zip, 1, 5) = '74621') or (substr(ca_zip, 1, 5) = '11622') or (substr(ca_zip, 1, 5) = '68908') or (substr(ca_zip, 1, 5) = '33032') or (substr(ca_zip, 1, 5) = '52868') or (substr(ca_zip, 1, 5) = '99194') or (substr(ca_zip, 1, 5) = '99900') or (substr(ca_zip, 1, 5) = '84936') or (substr(ca_zip, 1, 5) = '69036') or (substr(ca_zip, 1, 5) = '99149') or (substr(ca_zip, 1, 5) = '45013') or (substr(ca_zip, 1, 5) = '32895') or (substr(ca_zip, 1, 5) = '59004') or (substr(ca_zip, 1, 5) = '32322') or (substr(ca_zip, 1, 5) = '14933') or (substr(ca_zip, 1, 5) = '32936') or (substr(ca_zip, 1, 5) = '33562') or (substr(ca_zip, 1, 5) = '72550') or (substr(ca_zip, 1, 5) = '27385') or (substr(ca_zip, 1, 5) = '58049') or (substr(ca_zip, 1, 5) = '58200') or (substr(ca_zip, 1, 5) = '16808') or (substr(ca_zip, 1, 5) = '21360') or (substr(ca_zip, 1, 5) = '32961') or (substr(ca_zip, 1, 5) = '18586') or (substr(ca_zip, 1, 5) = '79307') or (substr(ca_zip, 1, 5) = '15492')) and substr(substr(ca_zip, 1, 5), 1, 2) is not null) (type: boolean)
                    Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: substr(ca_zip, 1, 5) (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: count()
                        keys: _col0 (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col1 (type: bigint)
            Execution mode: vectorized
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: customer_address
                  filterExpr: (ca_address_sk is not null and substr(substr(ca_zip, 1, 5), 1, 2) is not null) (type: boolean)
                  Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (ca_address_sk is not null and substr(substr(ca_zip, 1, 5), 1, 2) is not null) (type: boolean)
                    Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: ca_address_sk (type: int), ca_zip (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 10 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col1
                Statistics: Num rows: 44000000 Data size: 44654715780 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  keys: _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 44000000 Data size: 44654715780 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 44000000 Data size: 44654715780 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: bigint)
        Reducer 11 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 22000000 Data size: 22327357890 Basic stats: COMPLETE Column stats: NONE
                Filter Operator
                  predicate: (_col1 > 10L) (type: boolean)
                  Statistics: Num rows: 7333333 Data size: 7442452291 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: substr(_col0, 1, 5) (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 7333333 Data size: 7442452291 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: _col0 (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 7333333 Data size: 7442452291 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 7333333 Data size: 7442452291 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: bigint)
        Reducer 12 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3666666 Data size: 3721225638 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count(_col1)
                  keys: _col0 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 23666666 Data size: 24018823280 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 23666666 Data size: 24018823280 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: bigint)
        Reducer 7 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 20000000 Data size: 20297597642 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count(_col1)
                  keys: _col0 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 23666666 Data size: 24018823280 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 23666666 Data size: 24018823280 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: bigint)
        Reducer 8 
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 11833333 Data size: 12009411640 Basic stats: COMPLETE Column stats: NONE
                Filter Operator
                  predicate: (_col1 = 2L) (type: boolean)
                  Statistics: Num rows: 1 Data size: 1014 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 1014 Basic stats: COMPLETE Column stats: NONE
                    Spark HashTable Sink Operator
                      keys:
                        0 substr(_col0, 1, 2) (type: string)
                        1 substr(_col2, 1, 2) (type: string)

  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 14 
            Map Operator Tree:
                TableScan
                  alias: store
                  filterExpr: (s_store_sk is not null and substr(s_zip, 1, 2) is not null) (type: boolean)
                  Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (s_store_sk is not null and substr(s_zip, 1, 2) is not null) (type: boolean)
                    Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: s_store_sk (type: int), s_store_name (type: string), s_zip (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 substr(_col0, 1, 2) (type: string)
                          1 substr(_col2, 1, 2) (type: string)
                        outputColumnNames: _col1, _col2
                        input vertices:
                          0 Reducer 8
                        Statistics: Num rows: 1874 Data size: 3581903 Basic stats: COMPLETE Column stats: NONE
                        Spark HashTable Sink Operator
                          keys:
                            0 _col1 (type: int)
                            1 _col1 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 398), Map 5 (PARTITION-LEVEL SORT, 398)
        Reducer 3 <- Reducer 2 (GROUP, 481)
        Reducer 4 <- Reducer 3 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  filterExpr: (ss_sold_date_sk is not null and ss_store_sk is not null) (type: boolean)
                  Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (ss_sold_date_sk is not null and ss_store_sk is not null) (type: boolean)
                    Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: ss_sold_date_sk (type: int), ss_store_sk (type: int), ss_net_profit (type: decimal(7,2))
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: int), _col2 (type: decimal(7,2))
            Execution mode: vectorized
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: ((d_qoy = 1) and (d_year = 2002) and d_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((d_qoy = 1) and (d_year = 2002) and d_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: d_date_sk (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Reducer 2 
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col1, _col2
                Statistics: Num rows: 633595212 Data size: 55895953508 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col1 (type: int)
                    1 _col1 (type: int)
                  outputColumnNames: _col2, _col8
                  input vertices:
                    1 Map 14
                  Statistics: Num rows: 696954748 Data size: 61485550191 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col2)
                    keys: _col8 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 696954748 Data size: 61485550191 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Statistics: Num rows: 696954748 Data size: 61485550191 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col1 (type: decimal(17,2))
        Reducer 3 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 348477374 Data size: 30742775095 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 348477374 Data size: 30742775095 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col1 (type: decimal(17,2))
        Reducer 4 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: decimal(17,2))
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 348477374 Data size: 30742775095 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 8800 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 8800 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

