PREHOOK: query: explain
with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from item, catalog_sales, date_dim, call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, 3
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from item, catalog_sales, date_dim, call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, 3
 limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: (((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1))) and d_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 876588 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1))) and d_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 752 Data size: 9024 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int), d_year (type: int), d_moy (type: int)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 752 Data size: 9024 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: call_center
                  filterExpr: (cc_call_center_sk is not null and cc_name is not null) (type: boolean)
                  Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cc_call_center_sk is not null and cc_name is not null) (type: boolean)
                    Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cc_call_center_sk (type: int), cc_name (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col1 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-3
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 15 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: (((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1))) and d_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 876588 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1))) and d_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 752 Data size: 9024 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int), d_year (type: int), d_moy (type: int)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 752 Data size: 9024 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 16 
            Map Operator Tree:
                TableScan
                  alias: call_center
                  filterExpr: (cc_call_center_sk is not null and cc_name is not null) (type: boolean)
                  Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cc_call_center_sk is not null and cc_name is not null) (type: boolean)
                    Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cc_call_center_sk (type: int), cc_name (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col1 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-4
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 22 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: (((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1))) and d_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 876588 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1))) and d_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 752 Data size: 9024 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int), d_year (type: int), d_moy (type: int)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 752 Data size: 9024 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 23 
            Map Operator Tree:
                TableScan
                  alias: call_center
                  filterExpr: (cc_call_center_sk is not null and cc_name is not null) (type: boolean)
                  Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cc_call_center_sk is not null and cc_name is not null) (type: boolean)
                    Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cc_call_center_sk (type: int), cc_name (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 60 Data size: 6120 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col1 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-1
    Spark
      Edges:
        Reducer 11 <- Map 10 (PARTITION-LEVEL SORT, 202), Map 17 (PARTITION-LEVEL SORT, 202)
        Reducer 12 <- Reducer 11 (GROUP, 372)
        Reducer 13 <- Reducer 12 (PARTITION-LEVEL SORT, 372)
        Reducer 14 <- Reducer 13 (PARTITION-LEVEL SORT, 372)
        Reducer 19 <- Map 18 (PARTITION-LEVEL SORT, 202), Map 24 (PARTITION-LEVEL SORT, 202)
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 202), Map 9 (PARTITION-LEVEL SORT, 202)
        Reducer 20 <- Reducer 19 (GROUP, 372)
        Reducer 21 <- Reducer 20 (PARTITION-LEVEL SORT, 372)
        Reducer 3 <- Reducer 2 (GROUP, 372)
        Reducer 4 <- Reducer 3 (PARTITION-LEVEL SORT, 372)
        Reducer 5 <- Reducer 14 (PARTITION-LEVEL SORT, 737), Reducer 21 (PARTITION-LEVEL SORT, 737), Reducer 4 (PARTITION-LEVEL SORT, 737)
        Reducer 6 <- Reducer 5 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: catalog_sales
                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null and cs_call_center_sk is not null) (type: boolean)
                  Statistics: Num rows: 287989836 Data size: 35538018952 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cs_call_center_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 285117980 Data size: 35183631184 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cs_sold_date_sk (type: int), cs_call_center_sk (type: int), cs_item_sk (type: int), cs_sales_price (type: decimal(7,2))
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 285117980 Data size: 35183631184 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col1, _col2, _col3, _col5, _col6
                        input vertices:
                          1 Map 7
                        Statistics: Num rows: 116588247 Data size: 14758000268 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 _col1 (type: int)
                            1 _col0 (type: int)
                          outputColumnNames: _col2, _col3, _col5, _col6, _col8
                          input vertices:
                            1 Map 8
                          Statistics: Num rows: 116588247 Data size: 25722993858 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col2 (type: int)
                            sort order: +
                            Map-reduce partition columns: _col2 (type: int)
                            Statistics: Num rows: 116588247 Data size: 25722993858 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col3 (type: decimal(7,2)), _col5 (type: int), _col6 (type: int), _col8 (type: string)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 10 
            Map Operator Tree:
                TableScan
                  alias: catalog_sales
                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null and cs_call_center_sk is not null) (type: boolean)
                  Statistics: Num rows: 287989836 Data size: 35538018952 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cs_call_center_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 285117980 Data size: 35183631184 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cs_sold_date_sk (type: int), cs_call_center_sk (type: int), cs_item_sk (type: int), cs_sales_price (type: decimal(7,2))
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 285117980 Data size: 35183631184 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col1, _col2, _col3, _col5, _col6
                        input vertices:
                          1 Map 15
                        Statistics: Num rows: 116588247 Data size: 14758000268 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 _col1 (type: int)
                            1 _col0 (type: int)
                          outputColumnNames: _col2, _col3, _col5, _col6, _col8
                          input vertices:
                            1 Map 16
                          Statistics: Num rows: 116588247 Data size: 25722993858 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col2 (type: int)
                            sort order: +
                            Map-reduce partition columns: _col2 (type: int)
                            Statistics: Num rows: 116588247 Data size: 25722993858 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col3 (type: decimal(7,2)), _col5 (type: int), _col6 (type: int), _col8 (type: string)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 17 
            Map Operator Tree:
                TableScan
                  alias: item
                  filterExpr: (i_item_sk is not null and i_category is not null and i_brand is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (i_brand is not null and i_category is not null and i_item_sk is not null) (type: boolean)
                    Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_sk (type: int), i_brand (type: string), i_category (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized
        Map 18 
            Map Operator Tree:
                TableScan
                  alias: catalog_sales
                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null and cs_call_center_sk is not null) (type: boolean)
                  Statistics: Num rows: 287989836 Data size: 35538018952 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cs_call_center_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 285117980 Data size: 35183631184 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cs_sold_date_sk (type: int), cs_call_center_sk (type: int), cs_item_sk (type: int), cs_sales_price (type: decimal(7,2))
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 285117980 Data size: 35183631184 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col1, _col2, _col3, _col5, _col6
                        input vertices:
                          1 Map 22
                        Statistics: Num rows: 116588247 Data size: 14758000268 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 _col1 (type: int)
                            1 _col0 (type: int)
                          outputColumnNames: _col2, _col3, _col5, _col6, _col8
                          input vertices:
                            1 Map 23
                          Statistics: Num rows: 116588247 Data size: 25722993858 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col2 (type: int)
                            sort order: +
                            Map-reduce partition columns: _col2 (type: int)
                            Statistics: Num rows: 116588247 Data size: 25722993858 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col3 (type: decimal(7,2)), _col5 (type: int), _col6 (type: int), _col8 (type: string)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 24 
            Map Operator Tree:
                TableScan
                  alias: item
                  filterExpr: (i_item_sk is not null and i_category is not null and i_brand is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (i_brand is not null and i_category is not null and i_item_sk is not null) (type: boolean)
                    Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_sk (type: int), i_brand (type: string), i_category (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: item
                  filterExpr: (i_item_sk is not null and i_category is not null and i_brand is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (i_brand is not null and i_category is not null and i_item_sk is not null) (type: boolean)
                    Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_sk (type: int), i_brand (type: string), i_category (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 462000 Data size: 89628000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized
        Reducer 11 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col2 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col3, _col5, _col6, _col8, _col10, _col11
                Statistics: Num rows: 116588247 Data size: 47408407800 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col3)
                  keys: _col5 (type: int), _col6 (type: int), _col8 (type: string), _col10 (type: string), _col11 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    sort order: +++++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col5 (type: decimal(17,2))
        Reducer 12 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col0 (type: int)
                  sort order: ++++
                  Map-reduce partition columns: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col0 (type: int)
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: int), _col5 (type: decimal(17,2))
        Reducer 13 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey3 (type: int), VALUE._col0 (type: int), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey0 (type: string), VALUE._col1 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: int, _col1: int, _col2: string, _col3: string, _col4: string, _col5: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col4 ASC NULLS FIRST, _col3 ASC NULLS FIRST, _col2 ASC NULLS FIRST, _col0 ASC NULLS FIRST
                        partition by: _col4, _col3, _col2, _col0
                        raw input shape:
                        window functions:
                            window function definition
                              alias: avg_window_0
                              arguments: _col5
                              name: avg
                              window function: GenericUDAFAverageEvaluatorDecimal
                              window frame: ROWS PRECEDING(MAX)~FOLLOWING(MAX)
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: avg_window_0 (type: decimal(21,6)), _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: decimal(17,2))
                    outputColumnNames: avg_window_0, _col0, _col1, _col2, _col3, _col4, _col5
                    Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col0 (type: int), _col1 (type: int)
                      sort order: +++++
                      Map-reduce partition columns: _col4 (type: string), _col3 (type: string), _col2 (type: string)
                      Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: avg_window_0 (type: decimal(21,6)), _col5 (type: decimal(17,2))
        Reducer 14 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: decimal(21,6)), KEY.reducesinkkey3 (type: int), KEY.reducesinkkey4 (type: int), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey0 (type: string), VALUE._col1 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 116588247 Data size: 60625888440 Basic stats: COMPLETE Column stats: COMPLETE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: decimal(21,6), _col1: int, _col2: int, _col3: string, _col4: string, _col5: string, _col6: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col1 ASC NULLS FIRST, _col2 ASC NULLS FIRST
                        partition by: _col5, _col4, _col3
                        raw input shape:
                        window functions:
                            window function definition
                              alias: rank_window_1
                              arguments: _col1, _col2
                              name: rank
                              window function: GenericUDAFRankEvaluator
                              window frame: ROWS PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 116588247 Data size: 60625888440 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((_col0 > 0) and (_col1 = 2000) and rank_window_1 is not null) (type: boolean)
                    Statistics: Num rows: 346989 Data size: 180434280 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: rank_window_1 (type: int), _col0 (type: decimal(21,6)), _col1 (type: int), _col2 (type: int), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: decimal(17,2))
                      outputColumnNames: rank_window_1, _col0, _col1, _col2, _col3, _col4, _col5, _col6
                      Statistics: Num rows: 346989 Data size: 180434280 Basic stats: COMPLETE Column stats: COMPLETE
                      Filter Operator
                        predicate: CASE WHEN ((_col0 > 0)) THEN (((abs((_col6 - _col0)) / _col0) > 0.1)) ELSE (null) END (type: boolean)
                        Statistics: Num rows: 173494 Data size: 90910856 Basic stats: COMPLETE Column stats: COMPLETE
                        Select Operator
                          expressions: _col5 (type: string), _col4 (type: string), _col3 (type: string), _col1 (type: int), _col2 (type: int), _col6 (type: decimal(17,2)), _col0 (type: decimal(21,6)), rank_window_1 (type: int)
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                          Statistics: Num rows: 173494 Data size: 90910856 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col7 (type: int)
                            sort order: ++++
                            Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col7 (type: int)
                            Statistics: Num rows: 173494 Data size: 90910856 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col3 (type: int), _col4 (type: int), _col5 (type: decimal(17,2)), _col6 (type: decimal(21,6))
        Reducer 19 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col2 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col3, _col5, _col6, _col8, _col10, _col11
                Statistics: Num rows: 116588247 Data size: 47408407800 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col3)
                  keys: _col5 (type: int), _col6 (type: int), _col8 (type: string), _col10 (type: string), _col11 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    sort order: +++++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col5 (type: decimal(17,2))
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col2 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col3, _col5, _col6, _col8, _col10, _col11
                Statistics: Num rows: 116588247 Data size: 47408407800 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col3)
                  keys: _col5 (type: int), _col6 (type: int), _col8 (type: string), _col10 (type: string), _col11 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    sort order: +++++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col5 (type: decimal(17,2))
        Reducer 20 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col0 (type: int), _col1 (type: int)
                  sort order: +++++
                  Map-reduce partition columns: _col4 (type: string), _col3 (type: string), _col2 (type: string)
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col5 (type: decimal(17,2))
        Reducer 21 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey3 (type: int), KEY.reducesinkkey4 (type: int), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey0 (type: string), VALUE._col0 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: int, _col1: int, _col2: string, _col3: string, _col4: string, _col5: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col0 ASC NULLS FIRST, _col1 ASC NULLS FIRST
                        partition by: _col4, _col3, _col2
                        raw input shape:
                        window functions:
                            window function definition
                              alias: rank_window_0
                              arguments: _col0, _col1
                              name: rank
                              window function: GenericUDAFRankEvaluator
                              window frame: ROWS PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: rank_window_0 is not null (type: boolean)
                    Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col5 (type: decimal(17,2)), rank_window_0 (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 116588247 Data size: 47101651788 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), (_col4 - 1) (type: int)
                        sort order: ++++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), (_col4 - 1) (type: int)
                        Statistics: Num rows: 116588247 Data size: 47101651788 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col3 (type: decimal(17,2))
        Reducer 3 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col0 (type: int), _col1 (type: int)
                  sort order: +++++
                  Map-reduce partition columns: _col4 (type: string), _col3 (type: string), _col2 (type: string)
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col5 (type: decimal(17,2))
        Reducer 4 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey3 (type: int), KEY.reducesinkkey4 (type: int), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey0 (type: string), VALUE._col0 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: int, _col1: int, _col2: string, _col3: string, _col4: string, _col5: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col0 ASC NULLS FIRST, _col1 ASC NULLS FIRST
                        partition by: _col4, _col3, _col2
                        raw input shape:
                        window functions:
                            window function definition
                              alias: rank_window_0
                              arguments: _col0, _col1
                              name: rank
                              window function: GenericUDAFRankEvaluator
                              window frame: ROWS PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: rank_window_0 is not null (type: boolean)
                    Statistics: Num rows: 116588247 Data size: 47568004776 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col4 (type: string), _col3 (type: string), _col2 (type: string), _col5 (type: decimal(17,2)), rank_window_0 (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 116588247 Data size: 47101651788 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), (_col4 + 1) (type: int)
                        sort order: ++++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), (_col4 + 1) (type: int)
                        Statistics: Num rows: 116588247 Data size: 47101651788 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col3 (type: decimal(17,2))
        Reducer 5 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 1 to 2
                keys:
                  0 _col0 (type: string), _col1 (type: string), _col2 (type: string), (_col4 + 1) (type: int)
                  1 _col0 (type: string), _col1 (type: string), _col2 (type: string), _col7 (type: int)
                  2 _col0 (type: string), _col1 (type: string), _col2 (type: string), (_col4 - 1) (type: int)
                outputColumnNames: _col3, _col5, _col6, _col8, _col9, _col10, _col11, _col16
                Statistics: Num rows: 173494 Data size: 112077124 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col5 (type: string), _col6 (type: string), _col8 (type: int), _col9 (type: int), _col11 (type: decimal(21,6)), _col10 (type: decimal(17,2)), _col3 (type: decimal(17,2)), _col16 (type: decimal(17,2)), (_col10 - _col11) (type: decimal(22,6))
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                  Statistics: Num rows: 173494 Data size: 131508452 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col8 (type: decimal(22,6)), _col2 (type: int)
                    sort order: ++
                    Statistics: Num rows: 173494 Data size: 131508452 Basic stats: COMPLETE Column stats: COMPLETE
                    TopN Hash Memory Usage: 0.1
                    value expressions: _col0 (type: string), _col1 (type: string), _col3 (type: int), _col4 (type: decimal(21,6)), _col5 (type: decimal(17,2)), _col6 (type: decimal(17,2)), _col7 (type: decimal(17,2))
        Reducer 6 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), VALUE._col1 (type: string), KEY.reducesinkkey1 (type: int), VALUE._col2 (type: int), VALUE._col3 (type: decimal(21,6)), VALUE._col4 (type: decimal(17,2)), VALUE._col5 (type: decimal(17,2)), VALUE._col6 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                Statistics: Num rows: 173494 Data size: 131508452 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 75800 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 75800 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

