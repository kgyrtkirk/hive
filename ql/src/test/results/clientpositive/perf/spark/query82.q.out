PREHOOK: query: explain
select  i_item_id
       ,i_item_desc
       ,i_current_price
 from item, inventory, date_dim, store_sales
 where i_current_price between 30 and 30+30
 and inv_item_sk = i_item_sk
 and d_date_sk=inv_date_sk
 and d_date between cast('2002-05-30' as date) and (cast('2002-05-30' as date) +  60 days)
 and i_manufact_id in (437,129,727,663)
 and inv_quantity_on_hand between 100 and 500
 and ss_item_sk = i_item_sk
 group by i_item_id,i_item_desc,i_current_price
 order by i_item_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  i_item_id
       ,i_item_desc
       ,i_current_price
 from item, inventory, date_dim, store_sales
 where i_current_price between 30 and 30+30
 and inv_item_sk = i_item_sk
 and d_date_sk=inv_date_sk
 and d_date between cast('2002-05-30' as date) and (cast('2002-05-30' as date) +  60 days)
 and i_manufact_id in (437,129,727,663)
 and inv_quantity_on_hand between 100 and 500
 and ss_item_sk = i_item_sk
 group by i_item_id,i_item_desc,i_current_price
 order by i_item_id
 limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-2 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-3
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: (CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'2002-05-30 00:00:00' AND TIMESTAMP'2002-07-29 00:00:00' and d_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 7158802 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'2002-05-30 00:00:00' AND TIMESTAMP'2002-07-29 00:00:00' and d_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 8116 Data size: 795368 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 8116 Data size: 795368 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: item
                  filterExpr: ((i_manufact_id) IN (437, 129, 727, 663) and i_current_price BETWEEN 30 AND 60 and i_item_sk is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 186512804 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((i_manufact_id) IN (437, 129, 727, 663) and i_current_price BETWEEN 30 AND 60 and i_item_sk is not null) (type: boolean)
                    Statistics: Num rows: 297 Data size: 119988 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_sk (type: int), i_item_id (type: string), i_item_desc (type: string), i_current_price (type: decimal(7,2))
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 297 Data size: 119988 Basic stats: COMPLETE Column stats: COMPLETE
                      Spark HashTable Sink Operator
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                          2 _col1 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: inventory
                  filterExpr: (inv_quantity_on_hand BETWEEN 100 AND 500 and inv_item_sk is not null and inv_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 37584000 Data size: 443485108 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (inv_date_sk is not null and inv_item_sk is not null and inv_quantity_on_hand BETWEEN 100 AND 500) (type: boolean)
                    Statistics: Num rows: 4176000 Data size: 49276128 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: inv_date_sk (type: int), inv_item_sk (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 4176000 Data size: 49276128 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col1
                        input vertices:
                          1 Map 6
                        Statistics: Num rows: 463969 Data size: 1855876 Basic stats: COMPLETE Column stats: COMPLETE
                        Spark HashTable Sink Operator
                          keys:
                            0 _col0 (type: int)
                            1 _col0 (type: int)
                            2 _col1 (type: int)
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work

  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 736)
        Reducer 3 <- Reducer 2 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  filterExpr: ss_item_sk is not null (type: boolean)
                  Statistics: Num rows: 575995635 Data size: 2303982540 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ss_item_sk is not null (type: boolean)
                    Statistics: Num rows: 575995635 Data size: 2303982540 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_item_sk (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 575995635 Data size: 2303982540 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                             Inner Join 1 to 2
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                          2 _col1 (type: int)
                        outputColumnNames: _col2, _col3, _col4
                        input vertices:
                          1 Map 4
                          2 Map 5
                        Statistics: Num rows: 237894414 Data size: 94206187944 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          keys: _col2 (type: string), _col3 (type: string), _col4 (type: decimal(7,2))
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 237894414 Data size: 94206187944 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: decimal(7,2))
                            sort order: +++
                            Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: decimal(7,2))
                            Statistics: Num rows: 237894414 Data size: 94206187944 Basic stats: COMPLETE Column stats: COMPLETE
                            TopN Hash Memory Usage: 0.1
            Execution mode: vectorized
            Local Work:
              Map Reduce Local Work
        Reducer 2 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: decimal(7,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 26286282 Data size: 10409367672 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 26286282 Data size: 10409367672 Basic stats: COMPLETE Column stats: COMPLETE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col1 (type: string), _col2 (type: decimal(7,2))
        Reducer 3 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string), VALUE._col1 (type: decimal(7,2))
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 26286282 Data size: 10409367672 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 39600 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 39600 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

