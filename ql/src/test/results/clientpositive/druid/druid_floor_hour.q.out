PREHOOK: query: drop table if exists druid_t1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists druid_t1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create external table druid_t1(`__time` timestamp with local time zone, n string, v integer)
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@druid_t1
POSTHOOK: query: create external table druid_t1(`__time` timestamp with local time zone, n string, v integer)
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@druid_t1
PREHOOK: query: insert into druid_t1 values
	(cast('2010-01-01 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'x1', 1),
	(cast('2010-02-01 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'v2', 2),
	(cast('2010-02-01 23:00:01 America/Los_Angeles' as timestamp with local time zone), 'v3', 3),
	(cast('2010-02-02 23:59:59 America/Los_Angeles' as timestamp with local time zone), 'v4', 4),
	(cast('2010-02-03 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'x5', 5),
	(cast('2010-03-01 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'x6', 6)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@druid_t1
POSTHOOK: query: insert into druid_t1 values
	(cast('2010-01-01 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'x1', 1),
	(cast('2010-02-01 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'v2', 2),
	(cast('2010-02-01 23:00:01 America/Los_Angeles' as timestamp with local time zone), 'v3', 3),
	(cast('2010-02-02 23:59:59 America/Los_Angeles' as timestamp with local time zone), 'v4', 4),
	(cast('2010-02-03 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'x5', 5),
	(cast('2010-03-01 00:00:01 America/Los_Angeles' as timestamp with local time zone), 'x6', 6)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@druid_t1
PREHOOK: query: EXPLAIN
SELECT *
FROM druid_t1
WHERE floor_hour(`__time`)
    BETWEEN CAST('2010-02-01 00:00:00' AS TIMESTAMP WITH LOCAL TIME ZONE)
        AND CAST('2010-02-03 00:00:00' AS TIMESTAMP WITH LOCAL TIME ZONE)
order by `__time`
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_t1
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN
SELECT *
FROM druid_t1
WHERE floor_hour(`__time`)
    BETWEEN CAST('2010-02-01 00:00:00' AS TIMESTAMP WITH LOCAL TIME ZONE)
        AND CAST('2010-02-03 00:00:00' AS TIMESTAMP WITH LOCAL TIME ZONE)
order by `__time`
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_t1
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: druid_t1
                  properties:
                    druid.fieldNames __time,n,v
                    druid.fieldTypes timestamp with local time zone,string,int
                    druid.query.json {"queryType":"scan","dataSource":"default.druid_t1","intervals":["2010-02-01T08:00:00.000Z/2010-02-03T09:00:00.000Z"],"columns":["__time","n","v"],"resultFormat":"compactedList"}
                    druid.query.type scan
                  Statistics: Num rows: 1 Data size: 228 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: __time (type: timestamp with local time zone), n (type: string), v (type: int)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1 Data size: 228 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: timestamp with local time zone)
                      sort order: +
                      Statistics: Num rows: 1 Data size: 228 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string), _col2 (type: int)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: timestamp with local time zone), VALUE._col0 (type: string), VALUE._col1 (type: int)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 228 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 228 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

