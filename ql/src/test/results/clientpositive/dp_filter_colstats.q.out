PREHOOK: query: create table i0 (p int,v int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@i0
POSTHOOK: query: create table i0 (p int,v int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@i0
PREHOOK: query: insert into i0 values
	(0,0),
	(2,2),
	(3,3)
PREHOOK: type: QUERY
PREHOOK: Output: default@i0
POSTHOOK: query: insert into i0 values
	(0,0),
	(2,2),
	(3,3)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@i0
POSTHOOK: Lineage: i0.p EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: i0.v EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: create table p0 (v int) partitioned by (p int) stored as orc tblproperties ("transactional"="true", "transactional_properties"="insert_only")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@p0
POSTHOOK: query: create table p0 (v int) partitioned by (p int) stored as orc tblproperties ("transactional"="true", "transactional_properties"="insert_only")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@p0
PREHOOK: query: explain insert overwrite table p0 partition (p) select * from i0 where v < 3
PREHOOK: type: QUERY
POSTHOOK: query: explain insert overwrite table p0 partition (p) select * from i0 where v < 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: i0
            Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (v < 3) (type: boolean)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: p (type: int), v (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.p0
                  Write Type: INSERT

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            p 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.p0
          Write Type: INSERT
          micromanaged table: true

  Stage: Stage-2
    Stats Work
      Basic Stats Work:

  Stage: Stage-3
    Merge File Operator
      Map Operator Tree:
          ORC File Merge Operator
      merge level: stripe
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat

  Stage: Stage-5
    Merge File Operator
      Map Operator Tree:
          ORC File Merge Operator
      merge level: stripe
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat

  Stage: Stage-6
    Dependency Collection

PREHOOK: query: insert overwrite table p0 partition (p) select * from i0 where v < 3
PREHOOK: type: QUERY
PREHOOK: Input: default@i0
PREHOOK: Output: default@p0
POSTHOOK: query: insert overwrite table p0 partition (p) select * from i0 where v < 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@i0
PREHOOK: query: select count(*) from p0 where v!=1
PREHOOK: type: QUERY
PREHOOK: Input: default@p0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from p0 where v!=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@p0
#### A masked pattern was here ####
0
PREHOOK: query: select * from p0 order by v
PREHOOK: type: QUERY
PREHOOK: Input: default@p0
#### A masked pattern was here ####
POSTHOOK: query: select * from p0 order by v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@p0
#### A masked pattern was here ####
PREHOOK: query: select v,count(*) from p0 group by v
PREHOOK: type: QUERY
PREHOOK: Input: default@p0
#### A masked pattern was here ####
POSTHOOK: query: select v,count(*) from p0 group by v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@p0
#### A masked pattern was here ####
PREHOOK: query: select count(*) from p0 where v!=1.1
PREHOOK: type: QUERY
PREHOOK: Input: default@p0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from p0 where v!=1.1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@p0
#### A masked pattern was here ####
0
PREHOOK: query: select * from p0 order by v
PREHOOK: type: QUERY
PREHOOK: Input: default@p0
#### A masked pattern was here ####
POSTHOOK: query: select * from p0 order by v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@p0
#### A masked pattern was here ####
PREHOOK: query: explain insert into table p0 partition (p) select * from i0 where v < 4
PREHOOK: type: QUERY
POSTHOOK: query: explain insert into table p0 partition (p) select * from i0 where v < 4
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: i0
            Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (v < 4) (type: boolean)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: p (type: int), v (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.p0
                  Write Type: INSERT

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            p 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.p0
          Write Type: INSERT
          micromanaged table: true

  Stage: Stage-2
    Stats Work
      Basic Stats Work:

  Stage: Stage-3
    Merge File Operator
      Map Operator Tree:
          ORC File Merge Operator
      merge level: stripe
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat

  Stage: Stage-5
    Merge File Operator
      Map Operator Tree:
          ORC File Merge Operator
      merge level: stripe
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat

  Stage: Stage-6
    Dependency Collection

PREHOOK: query: insert into table p0 partition (p) select * from i0 where v < 4
PREHOOK: type: QUERY
PREHOOK: Input: default@i0
PREHOOK: Output: default@p0
POSTHOOK: query: insert into table p0 partition (p) select * from i0 where v < 4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@i0
POSTHOOK: Output: default@p0@p=0
POSTHOOK: Output: default@p0@p=2
POSTHOOK: Output: default@p0@p=3
POSTHOOK: Lineage: p0 PARTITION(p=0).v SIMPLE [(i0)i0.FieldSchema(name:p, type:int, comment:null), ]
POSTHOOK: Lineage: p0 PARTITION(p=2).v SIMPLE [(i0)i0.FieldSchema(name:p, type:int, comment:null), ]
POSTHOOK: Lineage: p0 PARTITION(p=3).v SIMPLE [(i0)i0.FieldSchema(name:p, type:int, comment:null), ]
PREHOOK: query: select * from p0 order by v
PREHOOK: type: QUERY
PREHOOK: Input: default@p0
PREHOOK: Input: default@p0@p=0
PREHOOK: Input: default@p0@p=2
PREHOOK: Input: default@p0@p=3
#### A masked pattern was here ####
POSTHOOK: query: select * from p0 order by v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@p0
POSTHOOK: Input: default@p0@p=0
POSTHOOK: Input: default@p0@p=2
POSTHOOK: Input: default@p0@p=3
#### A masked pattern was here ####
0	0
0	0
2	2
2	2
3	3
