PREHOOK: query: CREATE TABLE tmpT1_n0(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmpT1_n0
POSTHOOK: query: CREATE TABLE tmpT1_n0(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmpT1_n0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE tmpT1_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tmpt1_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE tmpT1_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tmpt1_n0
PREHOOK: query: CREATE TABLE T1_n151(key INT, val STRING) SKEWED BY (key) ON ((2))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n151
POSTHOOK: query: CREATE TABLE T1_n151(key INT, val STRING) SKEWED BY (key) ON ((2))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n151
PREHOOK: query: INSERT OVERWRITE TABLE T1_n151 SELECT key, val FROM tmpT1_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@tmpt1_n0
PREHOOK: Output: default@t1_n151
POSTHOOK: query: INSERT OVERWRITE TABLE T1_n151 SELECT key, val FROM tmpT1_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmpt1_n0
POSTHOOK: Output: default@t1_n151
POSTHOOK: Lineage: t1_n151.key EXPRESSION [(tmpt1_n0)tmpt1_n0.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n151.val SIMPLE [(tmpt1_n0)tmpt1_n0.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tmpT2_n0(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmpT2_n0
POSTHOOK: query: CREATE TABLE tmpT2_n0(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmpT2_n0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE tmpT2_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tmpt2_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE tmpT2_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tmpt2_n0
PREHOOK: query: CREATE TABLE T2_n88(key INT, val STRING) SKEWED BY (key) ON ((3))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n88
POSTHOOK: query: CREATE TABLE T2_n88(key INT, val STRING) SKEWED BY (key) ON ((3))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n88
PREHOOK: query: INSERT OVERWRITE TABLE T2_n88 SELECT key, val FROM tmpT2_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@tmpt2_n0
PREHOOK: Output: default@t2_n88
POSTHOOK: query: INSERT OVERWRITE TABLE T2_n88 SELECT key, val FROM tmpT2_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmpt2_n0
POSTHOOK: Output: default@t2_n88
POSTHOOK: Lineage: t2_n88.key EXPRESSION [(tmpt2_n0)tmpt2_n0.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t2_n88.val SIMPLE [(tmpt2_n0)tmpt2_n0.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:a 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), val (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), val (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Right Outer Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

