PREHOOK: query: drop table if exists tx1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists tx1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tx1 (a integer,b integer,c integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tx1
POSTHOOK: query: create table tx1 (a integer,b integer,c integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tx1
PREHOOK: query: insert into tx1 values (1,1,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@tx1
POSTHOOK: query: insert into tx1 values (1,1,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@tx1
POSTHOOK: Lineage: tx1.a EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: tx1.b EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: tx1.c EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into tx1 values (2,2,2)
PREHOOK: type: QUERY
PREHOOK: Output: default@tx1
POSTHOOK: query: insert into tx1 values (2,2,2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@tx1
POSTHOOK: Lineage: tx1.a EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: tx1.b EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: tx1.c EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by a,b grouping sets ((), b, a)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by a,b grouping sets ((), b, a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
NULL	1
PREHOOK: query: explain  
select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by a,b grouping sets ((), b, a)
PREHOOK: type: QUERY
POSTHOOK: query: explain  
select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by a,b grouping sets ((), b, a)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: tx1
            Statistics: Num rows: 2 Data size: 10 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (a < 0) (type: boolean)
              Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: a (type: int), b (type: int), c (type: int)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2)
                  keys: _col0 (type: int), _col1 (type: int), 0 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 3 Data size: 15 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)
                    sort order: +++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int)
                    Statistics: Num rows: 3 Data size: 15 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col3 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col3 (type: bigint), grouping(_col2, 0) (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain 
select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by b grouping sets (b)
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by b grouping sets (b)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: tx1
            Statistics: Num rows: 2 Data size: 10 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (a < 0) (type: boolean)
              Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: b (type: int), c (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col1)
                  keys: _col0 (type: int), 0 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: int)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                    Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int), KEY._col1 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col2 (type: bigint), grouping(_col1, 0) (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by b grouping sets ((), b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by b grouping sets ((), b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
NULL	1
PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by b grouping sets (b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by b grouping sets (b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by rollup (b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by rollup (b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
NULL	1
PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by rollup (b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by rollup (b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
PREHOOK: query: explain analyze
select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by rollup (b)
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze
select  sum(c),
        grouping(b)
from    tx1
where	a<0
group by rollup (b)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: tx1
            Statistics: Num rows: 2/2 Data size: 10 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (a < 0) (type: boolean)
              Statistics: Num rows: 1/0 Data size: 5 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: b (type: int), c (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1/0 Data size: 5 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col1)
                  keys: _col0 (type: int), 0 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2/1 Data size: 10 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: int)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                    Statistics: Num rows: 2/1 Data size: 10 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int), KEY._col1 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1/1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col2 (type: bigint), grouping(_col1, 0) (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1/1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1/1 Data size: 5 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

