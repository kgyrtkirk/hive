PREHOOK: query: drop table if exists tx1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists tx1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tx1 (a integer,b integer,c integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tx1
POSTHOOK: query: create table tx1 (a integer,b integer,c integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tx1
PREHOOK: query: select sum(c) from tx1
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select sum(c) from tx1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
NULL
PREHOOK: query: explain
select  sum(c),
        grouping(b)
from    tx1
group by b grouping sets ((), b)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  sum(c),
        grouping(b)
from    tx1
group by b grouping sets ((), b)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tx1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: b (type: int), c (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col1)
                      keys: _col0 (type: int), 0 (type: int)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: int)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                        Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col2 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int), KEY._col1 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col2 (type: bigint), grouping(_col1, 0) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
group by b grouping sets ((), b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
group by b grouping sets ((), b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
group by rollup (b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
group by rollup (b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
PREHOOK: query: select  sum(c),
        grouping(b)
from    tx1
group by rollup (b)
PREHOOK: type: QUERY
PREHOOK: Input: default@tx1
#### A masked pattern was here ####
POSTHOOK: query: select  sum(c),
        grouping(b)
from    tx1
group by rollup (b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tx1
#### A masked pattern was here ####
PREHOOK: query: explain analyze
select  sum(c),
        grouping(b)
from    tx1
group by rollup (b)
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze
select  sum(c),
        grouping(b)
from    tx1
group by rollup (b)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tx1
                  Statistics: Num rows: 1/0 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: b (type: int), c (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1/0 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col1)
                      keys: _col0 (type: int), 0 (type: int)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 2/0 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: int)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                        Statistics: Num rows: 2/0 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col2 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int), KEY._col1 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1/0 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col2 (type: bigint), grouping(_col1, 0) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1/0 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1/0 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

