PREHOOK: query: drop table if exists t1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists t8
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t8
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1 (a integer,b integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1
POSTHOOK: query: create table t1 (a integer,b integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1
PREHOOK: query: create table t8 like t1
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t8
POSTHOOK: query: create table t8 like t1
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t8
PREHOOK: query: insert into t1 values (1,1),(2,2),(3,3),(4,4),(5,5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t1
POSTHOOK: query: insert into t1 values (1,1),(2,2),(3,3),(4,4),(5,5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t1
POSTHOOK: Lineage: t1.a SCRIPT []
POSTHOOK: Lineage: t1.b SCRIPT []
PREHOOK: query: insert into t8
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1 union all
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: default@t8
POSTHOOK: query: insert into t8
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1 union all
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: default@t8
POSTHOOK: Lineage: t8.a EXPRESSION [(t1)t1.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: t8.b EXPRESSION [(t1)t1.FieldSchema(name:b, type:int, comment:null), ]
PREHOOK: query: analyze table t1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: default@t1
#### A masked pattern was here ####
POSTHOOK: query: analyze table t1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: default@t1
#### A masked pattern was here ####
PREHOOK: query: analyze table t8 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
PREHOOK: Output: default@t8
#### A masked pattern was here ####
POSTHOOK: query: analyze table t8 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
POSTHOOK: Output: default@t8
#### A masked pattern was here ####
PREHOOK: query: select sum(a) from t8 where b in (2,3) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b in (2,3) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_7]
        Select Operator [SEL_6] (rows=2/2 width=8)
          Output:["_col0"]
          Group By Operator [GBY_5] (rows=2/2 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_4]
              PartitionCols:_col0
              Group By Operator [GBY_3] (rows=2/2 width=12)
                Output:["_col0","_col1"],aggregations:["sum(a)"],keys:b
                Filter Operator [FIL_8] (rows=16/16 width=8)
                  predicate:((b = 2) or (b = 3))
                  TableScan [TS_0] (rows=40/40 width=8)
                    default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t8 where b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=8/8 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=8/8 width=8)
                    predicate:(b = 2)
                    TableScan [TS_0] (rows=40/40 width=8)
                      default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t1 where 2=b and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t1 where 2=b and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t1 where 2=b and b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t1 where 2=b and b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=1/1 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=1/1 width=8)
                    predicate:(b = 2)
                    TableScan [TS_0] (rows=5/5 width=8)
                      default@t1,t1,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t1 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t1 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t1 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t1 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=1/1 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=1/1 width=8)
                    predicate:(b = 2)
                    TableScan [TS_0] (rows=5/5 width=8)
                      default@t1,t1,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t8 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=8/8 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=8/8 width=8)
                    predicate:(b = 2)
                    TableScan [TS_0] (rows=40/40 width=8)
                      default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from t8 ta, t8 tb where ta.a = tb.b and ta.a=3
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from t8 ta, t8 tb where ta.a = tb.b and ta.a=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain analyze select count(*) from t8 ta, t8 tb where ta.a = tb.b and ta.a=3
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select count(*) from t8 ta, t8 tb where ta.a = tb.b and ta.a=3
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (XPROD_EDGE), Map 4 (XPROD_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1/1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1/1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_17] (rows=64/64 width=8)
                Conds:(Inner)
              <-Map 1 [XPROD_EDGE] llap
                XPROD_EDGE [RS_6]
                  Select Operator [SEL_2] (rows=8/8 width=4)
                    Filter Operator [FIL_15] (rows=8/8 width=4)
                      predicate:(a = 3)
                      TableScan [TS_0] (rows=40/40 width=4)
                        default@t8,ta,Tbl:COMPLETE,Col:COMPLETE,Output:["a"]
              <-Map 4 [XPROD_EDGE] llap
                XPROD_EDGE [RS_7]
                  Select Operator [SEL_5] (rows=8/8 width=4)
                    Filter Operator [FIL_16] (rows=8/8 width=4)
                      predicate:(b = 3)
                      TableScan [TS_3] (rows=40/40 width=4)
                        default@t8,tb,Tbl:COMPLETE,Col:COMPLETE,Output:["b"]

PREHOOK: query: select sum(a) from t8 where b in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50) and b=2 and b=2 and 2=b group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50) and b=2 and b=2 and 2=b group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50) and b=2 and b=2 and 2=b group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50) and b=2 and b=2 and 2=b group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=8/8 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=8/8 width=8)
                    predicate:((b = 2) and (b) IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50))
                    TableScan [TS_0] (rows=40/40 width=8)
                      default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t8 where b=2 and (b = 1 or b=2) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b=2 and (b = 1 or b=2) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b=2 and (b = 1 or b=2) group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b=2 and (b = 1 or b=2) group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=8/8 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=8/8 width=8)
                    predicate:(b = 2)
                    TableScan [TS_0] (rows=40/40 width=8)
                      default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

