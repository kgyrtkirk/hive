PREHOOK: query: drop table if exists t1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists t8
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t8
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1 (a integer,b integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1
POSTHOOK: query: create table t1 (a integer,b integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1
PREHOOK: query: create table t8 like t1
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t8
POSTHOOK: query: create table t8 like t1
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t8
PREHOOK: query: insert into t1 values (1,1),(2,2),(3,3),(4,4),(5,5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t1
POSTHOOK: query: insert into t1 values (1,1),(2,2),(3,3),(4,4),(5,5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t1
POSTHOOK: Lineage: t1.a SCRIPT []
POSTHOOK: Lineage: t1.b SCRIPT []
PREHOOK: query: insert into t8
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1 union all
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: default@t8
POSTHOOK: query: insert into t8
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1 union all
select * from t1 union all select * from t1 union all select * from t1 union all select * from t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: default@t8
POSTHOOK: Lineage: t8.a EXPRESSION [(t1)t1.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: t8.b EXPRESSION [(t1)t1.FieldSchema(name:b, type:int, comment:null), ]
PREHOOK: query: analyze table t1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: default@t1
#### A masked pattern was here ####
POSTHOOK: query: analyze table t1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: default@t1
#### A masked pattern was here ####
PREHOOK: query: analyze table t8 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
PREHOOK: Output: default@t8
#### A masked pattern was here ####
POSTHOOK: query: analyze table t8 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
POSTHOOK: Output: default@t8
#### A masked pattern was here ####
PREHOOK: query: select sum(a) from t8 where b in (2,3) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b in (2,3) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_7]
        Select Operator [SEL_6] (rows=2/2 width=8)
          Output:["_col0"]
          Group By Operator [GBY_5] (rows=2/2 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_4]
              PartitionCols:_col0
              Group By Operator [GBY_3] (rows=2/2 width=12)
                Output:["_col0","_col1"],aggregations:["sum(a)"],keys:b
                Filter Operator [FIL_8] (rows=16/16 width=8)
                  predicate:(b) IN (2, 3)
                  TableScan [TS_0] (rows=40/40 width=8)
                    default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t8 where b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=8/8 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=8/8 width=8)
                    predicate:(b = 2)
                    TableScan [TS_0] (rows=40/40 width=8)
                      default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t1 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t1 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t1 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t1 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=1/1 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=1/1 width=8)
                    predicate:((b = 2) and (b) IN (2, 3))
                    TableScan [TS_0] (rows=5/5 width=8)
                      default@t1,t1,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

PREHOOK: query: select sum(a) from t8 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t8
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t8 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) and b=2 group by b
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select sum(a) from t8 where b in (2,3) and b=2 group by b
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=1/1 width=8)
          Output:["_col0"]
          Group By Operator [GBY_6] (rows=1/1 width=12)
            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
          <-Map 1 [SIMPLE_EDGE] llap
            SHUFFLE [RS_5]
              PartitionCols:_col0
              Group By Operator [GBY_4] (rows=1/1 width=12)
                Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:2
                Select Operator [SEL_2] (rows=3/8 width=8)
                  Output:["_col1"]
                  Filter Operator [FIL_9] (rows=3/8 width=8)
                    predicate:((b = 2) and (b) IN (2, 3))
                    TableScan [TS_0] (rows=40/40 width=8)
                      default@t8,t8,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b"]

