PREHOOK: query: explain
       select rank() over (order by return_ratio) as return_rank from
       (select sum(wr.cint)/sum(ws.c_int)  as return_ratio
                 from cbo_t3  ws join alltypesorc wr on ws.value = wr.cstring1
                  group by ws.c_boolean ) in_web
PREHOOK: type: QUERY
POSTHOOK: query: explain
       select rank() over (order by return_ratio) as return_rank from
       (select sum(wr.cint)/sum(ws.c_int)  as return_ratio
                 from cbo_t3  ws join alltypesorc wr on ws.value = wr.cstring1
                  group by ws.c_boolean ) in_web
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 7 (ONE_TO_ONE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_64]
        Select Operator [SEL_63] (rows=2 width=4)
          Output:["_col0"]
          PTF Operator [PTF_62] (rows=2 width=16)
            Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(UDFToDouble(_col1) / UDFToDouble(_col2)) ASC NULLS LAST","partition by:":"0"}]
            Select Operator [SEL_61] (rows=2 width=16)
              Output:["_col1","_col2"]
            <-Reducer 4 [SIMPLE_EDGE] vectorized, llap
              SHUFFLE [RS_60]
                PartitionCols:0
                Select Operator [SEL_59] (rows=2 width=20)
                  Output:["_col1","_col2"]
                  Group By Operator [GBY_58] (rows=2 width=20)
                    Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                  <-Reducer 3 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_22]
                      PartitionCols:_col0
                      Group By Operator [GBY_21] (rows=3 width=20)
                        Output:["_col0","_col1","_col2"],aggregations:["sum(_col7)","sum(_col8)"],keys:_col1
                        Select Operator [SEL_19] (rows=9 width=36)
                          Output:["_col1","_col7","_col8"]
                          Merge Join Operator [MERGEJOIN_45] (rows=9 width=36)
                            Conds:RS_51._col0=RS_57._col0(Inner),Output:["_col1","_col2","_col3","_col5","_col6"]
                          <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_51]
                              PartitionCols:_col0
                              Group By Operator [GBY_50] (rows=9 width=105)
                                Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1
                              <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_49]
                                  PartitionCols:_col0, _col1
                                  Group By Operator [GBY_48] (rows=9 width=105)
                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count()","sum(_col1)"],keys:_col0, _col2
                                    Select Operator [SEL_47] (rows=18 width=87)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_46] (rows=18 width=87)
                                        predicate:value is not null
                                        TableScan [TS_0] (rows=20 width=88)
                                          default@cbo_t3,ws,Tbl:COMPLETE,Col:COMPLETE,Output:["value","c_int","c_boolean"]
                          <-Reducer 7 [ONE_TO_ONE_EDGE] vectorized, llap
                            FORWARD [RS_57]
                              PartitionCols:_col0
                              Group By Operator [GBY_56] (rows=4587 width=86)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0
                              <-Map 6 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_55]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_54] (rows=4587 width=86)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col0)","count()"],keys:_col1
                                    Select Operator [SEL_53] (rows=9174 width=73)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_52] (rows=9174 width=73)
                                        predicate:cstring1 is not null
                                        TableScan [TS_8] (rows=12288 width=73)
                                          default@alltypesorc,wr,Tbl:COMPLETE,Col:COMPLETE,Output:["cint","cstring1"]

