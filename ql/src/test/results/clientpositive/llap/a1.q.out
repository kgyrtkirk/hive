PREHOOK: query: drop table if exists testmaster1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists testmaster1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists testfeed1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists testfeed1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table testmaster1(key1 int, key2 int, attr1 int,attr2 int,attr4 int) partitioned by (attr5 int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@testmaster1
POSTHOOK: query: create table testmaster1(key1 int, key2 int, attr1 int,attr2 int,attr4 int) partitioned by (attr5 int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@testmaster1
PREHOOK: query: create table testfeed1(key1 int, key2 int, attr1 int,attr2 int,attr4 int,attr5 int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@testfeed1
POSTHOOK: query: create table testfeed1(key1 int, key2 int, attr1 int,attr2 int,attr4 int,attr5 int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@testfeed1
PREHOOK: query: insert into table testfeed1 values(1,2,5,6,7,1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@testfeed1
POSTHOOK: query: insert into table testfeed1 values(1,2,5,6,7,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@testfeed1
POSTHOOK: Lineage: testfeed1.attr1 SCRIPT []
POSTHOOK: Lineage: testfeed1.attr2 SCRIPT []
POSTHOOK: Lineage: testfeed1.attr4 SCRIPT []
POSTHOOK: Lineage: testfeed1.attr5 SCRIPT []
POSTHOOK: Lineage: testfeed1.key1 SCRIPT []
POSTHOOK: Lineage: testfeed1.key2 SCRIPT []
PREHOOK: query: insert into table testmaster1 partition(attr5=1) values(1,2,5,6,8)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@testmaster1@attr5=1
POSTHOOK: query: insert into table testmaster1 partition(attr5=1) values(1,2,5,6,8)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@testmaster1@attr5=1
POSTHOOK: Lineage: testmaster1 PARTITION(attr5=1).attr1 SCRIPT []
POSTHOOK: Lineage: testmaster1 PARTITION(attr5=1).attr2 SCRIPT []
POSTHOOK: Lineage: testmaster1 PARTITION(attr5=1).attr4 SCRIPT []
POSTHOOK: Lineage: testmaster1 PARTITION(attr5=1).key1 SCRIPT []
POSTHOOK: Lineage: testmaster1 PARTITION(attr5=1).key2 SCRIPT []
PREHOOK: query: explain select count(1) from testfeed1 lf
 join testmaster1 rt on lf.key1=rt.key1 and lf.key2=rt.key2 and lf.attr5=rt.attr5
 group by lf.key1,lf.key2,lf.attr5
PREHOOK: type: QUERY
POSTHOOK: query: explain select count(1) from testfeed1 lf
 join testmaster1 rt on lf.key1=rt.key1 and lf.key2=rt.key2 and lf.attr5=rt.attr5
 group by lf.key1,lf.key2,lf.attr5
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (ONE_TO_ONE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: lf
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (attr5 is not null and key1 is not null and key2 is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                      outputColumnNames: key1, key2, attr5
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                        sort order: +++
                        Map-reduce partition columns: key1 (type: int), key2 (type: int), attr5 (type: int)
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: attr5 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          keys: _col0 (type: int)
                          mode: hash
                          outputColumnNames: _col0
                          Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                          Dynamic Partitioning Event Operator
                            Target column: attr5 (int)
                            Target Input: rt
                            Partition key expr: attr5
                            Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                            Target Vertex: Map 4
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: rt
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key1 is not null and key2 is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                      outputColumnNames: key1, key2, attr5
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                        sort order: +++
                        Map-reduce partition columns: key1 (type: int), key2 (type: int), attr5 (type: int)
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 key1 (type: int), key2 (type: int), attr5 (type: int)
                  1 key1 (type: int), key2 (type: int), attr5 (type: int)
                outputColumnNames: key1, key2, attr5
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                  outputColumnNames: key1, key2, attr5
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                    sort order: +++
                    Map-reduce partition columns: key1 (type: int), key2 (type: int), attr5 (type: int)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count()
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int)
                mode: complete
                outputColumnNames: key1, key2, attr5, $f3
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: $f3 (type: bigint)
                  outputColumnNames: _o__c0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain select count(1) from testfeed1 lf
 join testmaster1 rt on lf.key1=rt.key1 and lf.key2 = rt.key2 and lf.attr5 =rt.attr5
 group by lf.key1,lf.key2,lf.attr5
PREHOOK: type: QUERY
POSTHOOK: query: explain select count(1) from testfeed1 lf
 join testmaster1 rt on lf.key1=rt.key1 and lf.key2 = rt.key2 and lf.attr5 =rt.attr5
 group by lf.key1,lf.key2,lf.attr5
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (ONE_TO_ONE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: lf
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (attr5 is not null and key1 is not null and key2 is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                      outputColumnNames: key1, key2, attr5
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                        sort order: +++
                        Map-reduce partition columns: key1 (type: int), key2 (type: int), attr5 (type: int)
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: attr5 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          keys: _col0 (type: int)
                          mode: hash
                          outputColumnNames: _col0
                          Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                          Dynamic Partitioning Event Operator
                            Target column: attr5 (int)
                            Target Input: rt
                            Partition key expr: attr5
                            Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                            Target Vertex: Map 4
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: rt
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key1 is not null and key2 is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                      outputColumnNames: key1, key2, attr5
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                        sort order: +++
                        Map-reduce partition columns: key1 (type: int), key2 (type: int), attr5 (type: int)
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 key1 (type: int), key2 (type: int), attr5 (type: int)
                  1 key1 (type: int), key2 (type: int), attr5 (type: int)
                outputColumnNames: key1, key2, attr5
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                  outputColumnNames: key1, key2, attr5
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: key1 (type: int), key2 (type: int), attr5 (type: int)
                    sort order: +++
                    Map-reduce partition columns: key1 (type: int), key2 (type: int), attr5 (type: int)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count()
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int)
                mode: complete
                outputColumnNames: key1, key2, attr5, $f3
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: $f3 (type: bigint)
                  outputColumnNames: _o__c0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(1) from testfeed1 lf
 join testmaster1 rt on lf.key1=rt.key1 and lf.key2 =rt.key2 and lf.attr5 = rt.attr5
 group by lf.key1,lf.key2,lf.attr5
PREHOOK: type: QUERY
PREHOOK: Input: default@testfeed1
PREHOOK: Input: default@testmaster1
PREHOOK: Input: default@testmaster1@attr5=1
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from testfeed1 lf
 join testmaster1 rt on lf.key1=rt.key1 and lf.key2 =rt.key2 and lf.attr5 = rt.attr5
 group by lf.key1,lf.key2,lf.attr5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@testfeed1
POSTHOOK: Input: default@testmaster1
POSTHOOK: Input: default@testmaster1@attr5=1
#### A masked pattern was here ####
1
