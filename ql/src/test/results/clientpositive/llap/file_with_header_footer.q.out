#### A masked pattern was here ####
PREHOOK: type: CREATETABLE
PREHOOK: Input: hdfs://### HDFS PATH ###
PREHOOK: Output: database:default
PREHOOK: Output: default@header_footer_table_1
#### A masked pattern was here ####
POSTHOOK: type: CREATETABLE
POSTHOOK: Input: hdfs://### HDFS PATH ###
POSTHOOK: Output: database:default
POSTHOOK: Output: default@header_footer_table_1
PREHOOK: query: SELECT * FROM header_footer_table_1
PREHOOK: type: QUERY
PREHOOK: Input: default@header_footer_table_1
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM header_footer_table_1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@header_footer_table_1
POSTHOOK: Output: hdfs://### HDFS PATH ###
steven	hive	1
dave	oozie	2
xifa	phd	3
chuan	hadoop	4
shanyu	senior	5
steven2	hive	11
dave2	oozie	12
xifa2	phd	13
chuan2	hadoop	14
shanyu2	senior	15
david3	oozie	22
PREHOOK: query: explain
SELECT count(distinct name) FROM header_footer_table_1
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT count(distinct name) FROM header_footer_table_1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: header_footer_table_1
                  Statistics: Num rows: 7 Data size: 1288 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: name (type: string)
                    outputColumnNames: name
                    Statistics: Num rows: 7 Data size: 1288 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      keys: name (type: string)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 7 Data size: 1288 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 7 Data size: 1288 Basic stats: COMPLETE Column stats: NONE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count(_col0)
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT assert_true(count(distinct name)=11) FROM header_footer_table_1
PREHOOK: type: QUERY
PREHOOK: Input: default@header_footer_table_1
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT assert_true(count(distinct name)=11) FROM header_footer_table_1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@header_footer_table_1
POSTHOOK: Output: hdfs://### HDFS PATH ###
NULL
PREHOOK: query: SELECT * FROM header_footer_table_1 WHERE id < 50
PREHOOK: type: QUERY
PREHOOK: Input: default@header_footer_table_1
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM header_footer_table_1 WHERE id < 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@header_footer_table_1
POSTHOOK: Output: hdfs://### HDFS PATH ###
steven	hive	1
dave	oozie	2
xifa	phd	3
chuan	hadoop	4
shanyu	senior	5
steven2	hive	11
dave2	oozie	12
xifa2	phd	13
chuan2	hadoop	14
shanyu2	senior	15
david3	oozie	22
PREHOOK: query: CREATE EXTERNAL TABLE header_footer_table_2 (name string, message string, id int) PARTITIONED BY (year int, month int, day int) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' tblproperties ("skip.header.line.count"="1", "skip.footer.line.count"="2")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@header_footer_table_2
POSTHOOK: query: CREATE EXTERNAL TABLE header_footer_table_2 (name string, message string, id int) PARTITIONED BY (year int, month int, day int) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' tblproperties ("skip.header.line.count"="1", "skip.footer.line.count"="2")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@header_footer_table_2
PREHOOK: query: ALTER TABLE header_footer_table_2 ADD PARTITION (year=2012, month=1, day=1) location 'hdfs://### HDFS PATH ###'
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Input: hdfs://### HDFS PATH ###
PREHOOK: Output: default@header_footer_table_2
POSTHOOK: query: ALTER TABLE header_footer_table_2 ADD PARTITION (year=2012, month=1, day=1) location 'hdfs://### HDFS PATH ###'
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Input: hdfs://### HDFS PATH ###
POSTHOOK: Output: default@header_footer_table_2
POSTHOOK: Output: default@header_footer_table_2@year=2012/month=1/day=1
PREHOOK: query: ALTER TABLE header_footer_table_2 ADD PARTITION (year=2012, month=1, day=2) location 'hdfs://### HDFS PATH ###'
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Input: hdfs://### HDFS PATH ###
PREHOOK: Output: default@header_footer_table_2
POSTHOOK: query: ALTER TABLE header_footer_table_2 ADD PARTITION (year=2012, month=1, day=2) location 'hdfs://### HDFS PATH ###'
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Input: hdfs://### HDFS PATH ###
POSTHOOK: Output: default@header_footer_table_2
POSTHOOK: Output: default@header_footer_table_2@year=2012/month=1/day=2
PREHOOK: query: ALTER TABLE header_footer_table_2 ADD PARTITION (year=2012, month=1, day=3) location 'hdfs://### HDFS PATH ###'
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Input: hdfs://### HDFS PATH ###
PREHOOK: Output: default@header_footer_table_2
POSTHOOK: query: ALTER TABLE header_footer_table_2 ADD PARTITION (year=2012, month=1, day=3) location 'hdfs://### HDFS PATH ###'
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Input: hdfs://### HDFS PATH ###
POSTHOOK: Output: default@header_footer_table_2
POSTHOOK: Output: default@header_footer_table_2@year=2012/month=1/day=3
PREHOOK: query: SELECT * FROM header_footer_table_2
PREHOOK: type: QUERY
PREHOOK: Input: default@header_footer_table_2
PREHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=1
PREHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=2
PREHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM header_footer_table_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@header_footer_table_2
POSTHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=1
POSTHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=2
POSTHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
steven	hive	1	2012	1	1
dave	oozie	2	2012	1	1
xifa	phd	3	2012	1	1
chuan	hadoop	4	2012	1	1
shanyu	senior	5	2012	1	1
steven2	hive	11	2012	1	2
dave2	oozie	12	2012	1	2
xifa2	phd	13	2012	1	2
chuan2	hadoop	14	2012	1	2
shanyu2	senior	15	2012	1	2
david3	oozie	22	2012	1	3
PREHOOK: query: SELECT * FROM header_footer_table_2 WHERE id < 50
PREHOOK: type: QUERY
PREHOOK: Input: default@header_footer_table_2
PREHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=1
PREHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=2
PREHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM header_footer_table_2 WHERE id < 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@header_footer_table_2
POSTHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=1
POSTHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=2
POSTHOOK: Input: default@header_footer_table_2@year=2012/month=1/day=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
steven	hive	1	2012	1	1
dave	oozie	2	2012	1	1
xifa	phd	3	2012	1	1
chuan	hadoop	4	2012	1	1
shanyu	senior	5	2012	1	1
steven2	hive	11	2012	1	2
dave2	oozie	12	2012	1	2
xifa2	phd	13	2012	1	2
chuan2	hadoop	14	2012	1	2
shanyu2	senior	15	2012	1	2
david3	oozie	22	2012	1	3
#### A masked pattern was here ####
PREHOOK: type: CREATETABLE
PREHOOK: Input: hdfs://### HDFS PATH ###
PREHOOK: Output: database:default
PREHOOK: Output: default@emptytable
#### A masked pattern was here ####
POSTHOOK: type: CREATETABLE
POSTHOOK: Input: hdfs://### HDFS PATH ###
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emptytable
PREHOOK: query: SELECT * FROM emptytable
PREHOOK: type: QUERY
PREHOOK: Input: default@emptytable
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM emptytable
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emptytable
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: SELECT * FROM emptytable WHERE id < 50
PREHOOK: type: QUERY
PREHOOK: Input: default@emptytable
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM emptytable WHERE id < 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emptytable
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: DROP TABLE header_footer_table_1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@header_footer_table_1
PREHOOK: Output: default@header_footer_table_1
POSTHOOK: query: DROP TABLE header_footer_table_1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@header_footer_table_1
POSTHOOK: Output: default@header_footer_table_1
PREHOOK: query: DROP TABLE header_footer_table_2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@header_footer_table_2
PREHOOK: Output: default@header_footer_table_2
POSTHOOK: query: DROP TABLE header_footer_table_2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@header_footer_table_2
POSTHOOK: Output: default@header_footer_table_2
PREHOOK: query: DROP TABLE emptytable
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@emptytable
PREHOOK: Output: default@emptytable
POSTHOOK: query: DROP TABLE emptytable
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@emptytable
POSTHOOK: Output: default@emptytable
#### A masked pattern was here ####
