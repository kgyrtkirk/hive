PREHOOK: query: create table lineitem2
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@lineitem
PREHOOK: Output: database:default
PREHOOK: Output: default@lineitem2
POSTHOOK: query: create table lineitem2
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@lineitem
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lineitem2
POSTHOOK: Lineage: lineitem2.l_comment SIMPLE [(lineitem)lineitem.FieldSchema(name:l_comment, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_commitdate SIMPLE [(lineitem)lineitem.FieldSchema(name:l_commitdate, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_discount SIMPLE [(lineitem)lineitem.FieldSchema(name:l_discount, type:double, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_extendedprice SIMPLE [(lineitem)lineitem.FieldSchema(name:l_extendedprice, type:double, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_linenumber SIMPLE [(lineitem)lineitem.FieldSchema(name:l_linenumber, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_linestatus SIMPLE [(lineitem)lineitem.FieldSchema(name:l_linestatus, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_orderkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_orderkey, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_partkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_partkey, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_quantity SIMPLE [(lineitem)lineitem.FieldSchema(name:l_quantity, type:double, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_receiptdate SIMPLE [(lineitem)lineitem.FieldSchema(name:l_receiptdate, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_returnflag SIMPLE [(lineitem)lineitem.FieldSchema(name:l_returnflag, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_shipdate SIMPLE [(lineitem)lineitem.FieldSchema(name:l_shipdate, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_shipinstruct SIMPLE [(lineitem)lineitem.FieldSchema(name:l_shipinstruct, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_shipmode SIMPLE [(lineitem)lineitem.FieldSchema(name:l_shipmode, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_suppkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_suppkey, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem2.l_tax SIMPLE [(lineitem)lineitem.FieldSchema(name:l_tax, type:double, comment:null), ]
PREHOOK: query: create table lineitem_stage
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem limit 1
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@lineitem
PREHOOK: Output: database:default
PREHOOK: Output: default@lineitem_stage
POSTHOOK: query: create table lineitem_stage
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem limit 1
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@lineitem
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lineitem_stage
POSTHOOK: Lineage: lineitem_stage.l_comment SIMPLE [(lineitem)lineitem.FieldSchema(name:l_comment, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_commitdate SIMPLE [(lineitem)lineitem.FieldSchema(name:l_commitdate, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_discount SIMPLE [(lineitem)lineitem.FieldSchema(name:l_discount, type:double, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_extendedprice SIMPLE [(lineitem)lineitem.FieldSchema(name:l_extendedprice, type:double, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_linenumber SIMPLE [(lineitem)lineitem.FieldSchema(name:l_linenumber, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_linestatus SIMPLE [(lineitem)lineitem.FieldSchema(name:l_linestatus, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_orderkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_orderkey, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_partkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_partkey, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_quantity SIMPLE [(lineitem)lineitem.FieldSchema(name:l_quantity, type:double, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_receiptdate SIMPLE [(lineitem)lineitem.FieldSchema(name:l_receiptdate, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_returnflag SIMPLE [(lineitem)lineitem.FieldSchema(name:l_returnflag, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_shipdate SIMPLE [(lineitem)lineitem.FieldSchema(name:l_shipdate, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_shipinstruct SIMPLE [(lineitem)lineitem.FieldSchema(name:l_shipinstruct, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_shipmode SIMPLE [(lineitem)lineitem.FieldSchema(name:l_shipmode, type:string, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_suppkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_suppkey, type:int, comment:null), ]
POSTHOOK: Lineage: lineitem_stage.l_tax SIMPLE [(lineitem)lineitem.FieldSchema(name:l_tax, type:double, comment:null), ]
PREHOOK: query: analyze table lineitem2 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@lineitem2
PREHOOK: Output: default@lineitem2
#### A masked pattern was here ####
POSTHOOK: query: analyze table lineitem2 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@lineitem2
POSTHOOK: Output: default@lineitem2
#### A masked pattern was here ####
PREHOOK: query: analyze table lineitem_stage compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@lineitem_stage
PREHOOK: Output: default@lineitem_stage
#### A masked pattern was here ####
POSTHOOK: query: analyze table lineitem_stage compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@lineitem_stage
POSTHOOK: Output: default@lineitem_stage
#### A masked pattern was here ####
PREHOOK: query: explain
merge into lineitem2 using (select * from lineitem_stage) sub on sub.L_ORDERKEY = lineitem2.L_ORDERKEY when matched then delete
PREHOOK: type: QUERY
POSTHOOK: query: explain
merge into lineitem2 using (select * from lineitem_stage) sub on sub.L_ORDERKEY = lineitem2.L_ORDERKEY when matched then delete
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: lineitem_stage
                  filterExpr: l_orderkey is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: l_orderkey is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: l_orderkey (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: lineitem2
                  filterExpr: l_orderkey is not null (type: boolean)
                  Statistics: Num rows: 100 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: l_orderkey is not null (type: boolean)
                    Statistics: Num rows: 100 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: l_orderkey (type: int)
                      sort order: +
                      Map-reduce partition columns: l_orderkey (type: int)
                      Statistics: Num rows: 100 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 l_orderkey (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col18, _col19
                Statistics: Num rows: 3 Data size: 252 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col19 = _col0) (type: boolean)
                  Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col18 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col19 = _col0) (type: boolean)
                  Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col18 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col18
                    Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: _col18 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.lineitem2
                  Write Type: DELETE
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col1 > 1L) (type: boolean)
                  Statistics: Num rows: 1 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: cardinality_violation(_col0) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.merge_tmp_table
                    Select Operator
                      expressions: _col0 (type: int)
                      outputColumnNames: val
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: compute_stats(val, 'hll')
                        mode: complete
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: COMPLETE
                        Select Operator
                          expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>)
                          outputColumnNames: _col0
                          Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: COMPLETE
                          File Output Operator
                            compressed: false
                            Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: COMPLETE
                            table:
                                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.lineitem2
          Write Type: DELETE

  Stage: Stage-4
    Stats Work
      Basic Stats Work:

  Stage: Stage-1
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.merge_tmp_table

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: val
          Column Types: int
          Table: default.merge_tmp_table

PREHOOK: query: merge into lineitem2 using (select * from lineitem_stage) sub on sub.L_ORDERKEY = lineitem2.L_ORDERKEY when matched then delete
PREHOOK: type: QUERY
PREHOOK: Input: default@lineitem2
PREHOOK: Input: default@lineitem_stage
PREHOOK: Output: default@lineitem2
PREHOOK: Output: default@merge_tmp_table
POSTHOOK: query: merge into lineitem2 using (select * from lineitem_stage) sub on sub.L_ORDERKEY = lineitem2.L_ORDERKEY when matched then delete
POSTHOOK: type: QUERY
POSTHOOK: Input: default@lineitem2
POSTHOOK: Input: default@lineitem_stage
POSTHOOK: Output: default@lineitem2
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(lineitem2)lineitem2.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), ]
