PREHOOK: query: create table tx(a int,u int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tx
POSTHOOK: query: create table tx(a int,u int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tx
PREHOOK: query: insert into tx values (1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(10,10)
PREHOOK: type: QUERY
PREHOOK: Output: default@tx
POSTHOOK: query: insert into tx values (1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(10,10)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@tx
POSTHOOK: Lineage: tx.a EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: tx.u EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: create table px(a int,p int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@px
POSTHOOK: query: create table px(a int,p int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@px
PREHOOK: query: insert into px values (2,2),(3,3),(5,5),(7,7),(11,11)
PREHOOK: type: QUERY
PREHOOK: Output: default@px
POSTHOOK: query: insert into px values (2,2),(3,3),(5,5),(7,7),(11,11)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@px
POSTHOOK: Lineage: px.a EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: px.p EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: explain 
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tx
                  Statistics: Num rows: 8 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((u < 10) and (u > 2)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: u (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: px
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((p < 10) and (p > 2)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: p (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: (_col0 * _col1) (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: sum(_col0)
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(u*p) from tx join px on (u=p) where u<10 and p>2
PREHOOK: type: QUERY
PREHOOK: Input: default@px
PREHOOK: Input: default@tx
#### A masked pattern was here ####
POSTHOOK: query: select sum(u*p) from tx join px on (u=p) where u<10 and p>2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@px
POSTHOOK: Input: default@tx
#### A masked pattern was here ####
PREHOOK: query: explain analyze
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tx
                  Statistics: Num rows: 8/8 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((u < 10) and (u > 2)) (type: boolean)
                    Statistics: Num rows: 1/5 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: u (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1/5 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1/5 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: px
                  Statistics: Num rows: 5/5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((p < 10) and (p > 2)) (type: boolean)
                    Statistics: Num rows: 1/3 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: p (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1/3 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1/3 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1/3 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: (_col0 * _col1) (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1/3 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: sum(_col0)
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select assert_true_oom(1 > sum(u*p)) from tx join px on (tx.a=px.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@px
PREHOOK: Input: default@tx
#### A masked pattern was here ####
Status: Failed
Vertex failed, vertexName=Reducer 3, vertexId=vertex_#ID#, diagnostics=[Task failed, taskId=task_#ID#, diagnostics=[TaskAttempt 0 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_0:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
], TaskAttempt 1 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_1:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
], TaskAttempt 2 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_2:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
], TaskAttempt 3 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_3:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
]], Vertex did not succeed due to OWN_TASK_FAILURE, failedTasks:1 killedTasks:0, Vertex vertex_#ID# [Reducer 3] killed/failed due to:OWN_TASK_FAILURE]
DAG did not succeed due to VERTEX_FAILURE. failedVertices:1 killedVertices:0
FAILED: Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.tez.TezTask. Vertex failed, vertexName=Reducer 3, vertexId=vertex_#ID#, diagnostics=[Task failed, taskId=task_#ID#, diagnostics=[TaskAttempt 0 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_0:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
], TaskAttempt 1 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_1:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
], TaskAttempt 2 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_2:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
], TaskAttempt 3 failed, info=[Error: Error while running task ( failure ) : attempt_#ID#_0001_4_03_000000_3:java.lang.RuntimeException: java.lang.OutOfMemoryError: assert_true_oom: assertation failed; Simulated OOM
#### A masked pattern was here ####
]], Vertex did not succeed due to OWN_TASK_FAILURE, failedTasks:1 killedTasks:0, Vertex vertex_#ID# [Reducer 3] killed/failed due to:OWN_TASK_FAILURE]DAG did not succeed due to VERTEX_FAILURE. failedVertices:1 killedVertices:0
PREHOOK: query: select assert_true_oom(2000 > sum(u*p)) from tx join px on (tx.a=px.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@px
PREHOOK: Input: default@tx
#### A masked pattern was here ####
POSTHOOK: query: select assert_true_oom(2000 > sum(u*p)) from tx join px on (tx.a=px.a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@px
POSTHOOK: Input: default@tx
#### A masked pattern was here ####
NULL
